class NuSenseApp {
    constructor() {
        this.selectedEmotion = null;
        this.selectedTopic = null;
        this.currentResponse = null;
        this.macrosData = this.loadMacrosData();
        this.wedukasData = this.loadWedukasData();
        this.processData = this.loadProcessData();
        
        // LiteLLM Integration
        this.liteLLMClient = null;
        this.aiEnabled = false;
        this.aiStats = {
            responsesGenerated: 0,
            cacheHits: 0,
            totalResponseTime: 0,
            averageResponseTime: 0
        };        
        // Training Module Variables
        this.scenarios = [];
        this.currentScenarioIndex = 0;
        this.score = 0;
        this.agentName = '';
        this.incorrectAnswers = [];
        this.selectedAnswer = null;

        // Academy Module Variables
        this.currentCase = null;
        this.currentHumanizeCase = null;
        // Adventure Module Variables
        this.currentAdventure = null;
        this.adventureStep = 0;
        this.currentScenarioId = null;
        this.adventureStepCount = 0;
        this.clientMood = 'neutral';
        this.quizQuestions = [];
        this.currentQuizIndex = 0;
        this.quizScore = 0;
        
        // Memory Challenge Variables
        this.currentMemoryChallenge = null;
        this.memoryChallengeType = null;
        this.memoryCases = [];
        this.currentMemoryIndex = 0;
        this.memoryScore = 0;
        this.memoryStartTime = null;
        this.memoryTimes = [];
        this.memoryTimer = null;
        
        this.init();
    }

    init() {
        this.checkAuth();
        this.setupEventListeners();
        this.setupTabNavigation();
        this.populateMacrosTable();
        this.populateWedukasGrid();
        this.displayUserGreeting();
        this.initializeLiteLLM();
        this.initializeAcademy();
        this.initializeAI(); // Inicializar IA
    }

    checkAuth() {
        // Solo verificar si estamos en app.html y no hay login
        if (window.location.pathname.includes('app.html')) {
            const isLoggedIn = localStorage.getItem('nusense_logged_in') === 'true';
            if (!isLoggedIn) {
                console.log('üîê Redirecting to login...');
                localStorage.clear(); // Limpiar cualquier dato corrupto
                window.location.href = 'login.html';
                return false;
        }
        }
        return true;
    }

    displayUserGreeting() {
        const username = localStorage.getItem('nusense_username');
        const greetingEl = document.getElementById('userGreeting');
        greetingEl.textContent = `Hola, ${username}`;
    }

    setupEventListeners() {
        // Logout
        document.getElementById('logoutBtn').addEventListener('click', () => {
            console.log('üîì Cerrando sesi√≥n...');
            localStorage.clear(); // Limpiar todo
            window.location.href = 'login.html?logout=true';
        });

        // Resources buttons
        document.getElementById('toneGuideBtn').addEventListener('click', () => {
            this.openModal('toneGuideModal');
        });

        document.getElementById('caseClassificationBtn').addEventListener('click', () => {
            this.openModal('caseClassificationModal');
        });

        document.getElementById('visualExamplesBtn').addEventListener('click', () => {
            this.openModal('visualExamplesModal');
        });

        // Emotion selection
        document.querySelectorAll('.emotion-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                document.querySelectorAll('.emotion-btn').forEach(b => b.classList.remove('selected'));
                btn.classList.add('selected');
                this.selectedEmotion = btn.dataset.emotion;
                this.updateGenerateButton();
            });
        });

        // Topic selection
        document.querySelectorAll('.topic-card').forEach(card => {
            card.addEventListener('click', () => {
                document.querySelectorAll('.topic-card').forEach(c => c.classList.remove('selected'));
                card.classList.add('selected');
                this.selectedTopic = card.dataset.topic;
                this.showProcessSummary();
                this.updateGenerateButton();
            });
        });

        // Context input
        document.getElementById('contextInput').addEventListener('input', () => {
            this.updateGenerateButton();
        });

        // Generate response
        document.getElementById('generateBtn').addEventListener('click', () => {
            this.generateResponse();
        });

        // Copy response
        document.getElementById('copyBtn').addEventListener('click', () => {
            this.copyResponse();
        });

        // Tone adjustments
        document.querySelectorAll('.tone-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                this.adjustTone(btn.dataset.tone);
            });
        });

        // Search functionality
        document.getElementById('macrosSearch').addEventListener('input', (e) => {
            this.filterMacros(e.target.value);
        });

        document.getElementById('macrosFilter').addEventListener('change', (e) => {
            this.filterMacros(null, e.target.value);
        });

        document.getElementById('wedukasSearch').addEventListener('input', (e) => {
            this.filterWedukas(e.target.value);
        });

        document.getElementById('wedukasFilter').addEventListener('change', (e) => {
            this.filterWedukas(null, e.target.value);
        });
    }

    setupTabNavigation() {
        document.querySelectorAll('.tab-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const tabId = btn.dataset.tab;
                
                // Update active tab button
                document.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('active'));
                btn.classList.add('active');
                
                // Show corresponding tab panel
                document.querySelectorAll('.tab-panel').forEach(panel => {
                    panel.classList.remove('active');
                });
                document.getElementById(tabId).classList.add('active');
                
                // Reset training to login screen when switching to training tab
                if (tabId === 'training') {
                    this.showTrainingScreen('login-screen');
                }
                
                // Initialize academy when switching to academy tab
                if (tabId === 'academy') {
                    this.initializeAcademy();
                }
            });
        });
    }

    updateGenerateButton() {
        const contextInput = document.getElementById('contextInput').value.trim();
        const generateBtn = document.getElementById('generateBtn');
        
        const isReady = contextInput && this.selectedEmotion && this.selectedTopic;
        generateBtn.disabled = !isReady;
    }

    showProcessSummary() {
        const summaryEl = document.getElementById('processSummary');
        const process = this.processData[this.selectedTopic];
        
        if (process) {
            summaryEl.innerHTML = `
                <h4>${process.title}</h4>
                <ul class="process-steps">
                    ${process.steps.map(step => `<li>${step}</li>`).join('')}
                </ul>
            `;
        }
    }

    generateResponse() {
        const contextInput = document.getElementById('contextInput').value.trim();
        const responseContainer = document.getElementById('responseContainer');
        const responseText = document.getElementById('responseText');
        
        // Simulate AI response generation
        const responses = this.getResponseTemplates();
        const template = responses[this.selectedTopic] || responses.default;
        
        let response = template.replace('[CLIENTE]', 'estimado cliente');
        response = this.adjustForEmotion(response, this.selectedEmotion);
        
        responseText.textContent = response;
        responseContainer.style.display = 'block';
        this.currentResponse = response;
        
        // Scroll to response
        responseContainer.scrollIntoView({ behavior: 'smooth' });
    }

    adjustForEmotion(response, emotion) {
        const emotionAdjustments = {
            molesto: response.replace('Hola', 'Entiendo tu frustraci√≥n').replace('te ayudo', 'voy a resolver esto inmediatamente'),
            preocupado: response.replace('Hola', 'Comprendo tu preocupaci√≥n').replace('te ayudo', 'te voy a tranquilizar resolviendo esto'),
            confundido: response.replace('Hola', 'Te explico paso a paso').replace('te ayudo', 'te voy a guiar'),
            satisfecho: response.replace('Hola', '¬°Qu√© bueno tenerte aqu√≠!').replace('te ayudo', 'con gusto te ayudo'),
            neutro: response
        };
        
        return emotionAdjustments[emotion] || response;
    }

    adjustTone(toneType) {
        if (!this.currentResponse) return;
        
        let adjustedResponse = this.currentResponse;
        const responseText = document.getElementById('responseText');
        
        switch (toneType) {
            case 'corto':
                adjustedResponse = this.makeResponseShorter(adjustedResponse);
                break;
            case 'formal':
                adjustedResponse = this.makeResponseFormal(adjustedResponse);
                break;
            case 'empatico':
                adjustedResponse = this.makeResponseEmpathetic(adjustedResponse);
                break;
        }
        
        responseText.textContent = adjustedResponse;
        this.currentResponse = adjustedResponse;
    }

    makeResponseShorter(response) {
        return response
            .replace(/Espero que esta informaci√≥n sea de utilidad\./g, '')
            .replace(/Por favor, no dudes en contactarnos si tienes alguna otra pregunta\./g, '')
            .replace(/\s+/g, ' ')
            .trim();
    }

    makeResponseFormal(response) {
        return response
            .replace(/Hola/g, 'Estimado/a cliente')
            .replace(/te ayudo/g, 'le asistimos')
            .replace(/puedes/g, 'puede usted')
            .replace(/tu/g, 'su');
    }

    makeResponseEmpathetic(response) {
        return response
            .replace(/Hola/g, 'Hola, entiendo c√≥mo te sientes y')
            .replace(/\./g, '. Estamos aqu√≠ para apoyarte.');
    }

    copyResponse() {
        if (this.currentResponse) {
            navigator.clipboard.writeText(this.currentResponse).then(() => {
                const copyBtn = document.getElementById('copyBtn');
                const originalText = copyBtn.textContent;
                copyBtn.textContent = '‚úÖ Copiado';
                setTimeout(() => {
                    copyBtn.textContent = originalText;
                }, 2000);
            });
        }
    }

    populateMacrosTable() {
        console.log('Cargando tabla de macros...');
        const tbody = document.getElementById('macrosTableBody');
        if (!tbody) {
            console.error('No se encontr√≥ el elemento macrosTableBody');
            return;
        }
        
        tbody.innerHTML = '';
        console.log('Datos de macros:', this.macrosData.length, 'items');
        
        this.macrosData.forEach((macro, index) => {
            console.log(`Agregando macro ${index + 1}:`, macro.title);
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${macro.title}</td>
                <td><span class="category-tag">${macro.category_title}</span></td>
                <td>${macro.lastUpdated}</td>
                <td>
                    <div class="macro-actions">
                        <button class="action-btn" onclick="app.viewMacro('${macro.id}')">Ver</button>
                        <button class="action-btn" onclick="app.copyMacro('${macro.id}')">Copiar</button>
                    </div>
                </td>
            `;
            tbody.appendChild(row);
        });
        
        console.log('Tabla de macros cargada exitosamente');
    }

    populateWedukasGrid() {
        const grid = document.getElementById('documentsGrid');
        grid.innerHTML = '';
        
        // Agrupar wedukas por categor√≠a
        const categories = {};
        this.wedukasData.forEach(weduka => {
            if (!categories[weduka.category]) {
                categories[weduka.category] = {
                    title: weduka.category_title,
                    items: []
                };
            }
            categories[weduka.category].items.push(weduka);
        });
        
        // Crear acordeones por categor√≠a
        Object.keys(categories).forEach(categoryKey => {
            const category = categories[categoryKey];
            const card = document.createElement('div');
            card.className = 'document-card';
            
            const itemsList = category.items.map(item => 
                `<div class="weduka-item">
                    <a href="${item.link}" target="_blank" class="weduka-link">
                        üìÑ ${item.title}
                    </a>
                </div>`
            ).join('');
            
            card.innerHTML = `
                <div class="document-header" onclick="app.toggleDocument('${categoryKey}')">
                    <h3 class="document-title">${category.title} (${category.items.length})</h3>
                    <span class="document-toggle">‚ñº</span>
                </div>
                <div class="document-content" id="content-${categoryKey}">
                    ${itemsList}
                </div>
            `;
            grid.appendChild(card);
        });
    }

    filterMacros(searchTerm, category) {
        const tbody = document.getElementById('macrosTableBody');
        const rows = tbody.querySelectorAll('tr');
        
        rows.forEach(row => {
            const title = row.children[0].textContent.toLowerCase();
            const categoryText = row.children[1].textContent.toLowerCase();
            
            const matchesSearch = !searchTerm || title.includes(searchTerm.toLowerCase());
            const matchesCategory = !category || 
                this.macrosData.find(m => m.title === row.children[0].textContent && m.category === category);
            
            row.style.display = matchesSearch && matchesCategory ? '' : 'none';
        });
    }

    filterWedukas(searchTerm, category) {
        const cards = document.querySelectorAll('.document-card');
        
        cards.forEach(card => {
            const title = card.querySelector('.document-title').textContent.toLowerCase();
            const links = card.querySelectorAll('.weduka-link');
            let hasMatch = false;
            let categoryMatch = true;
            
            // Verificar categor√≠a primero
            if (category && category !== '') {
                if (category === 'vanguard-venus') {
                    categoryMatch = title.includes('vanguard/venus');
                } else if (category === 'nu') {
                    categoryMatch = title.includes('nu (') && !title.includes('vanguard');
                }
            }
            
            // Verificar t√©rmino de b√∫squeda
            if (!searchTerm || searchTerm.trim() === '') {
                hasMatch = true;
            } else {
                const searchLower = searchTerm.toLowerCase();
                if (title.includes(searchLower)) {
                    hasMatch = true;
                } else {
                    // Buscar en los links individuales
                    links.forEach(link => {
                        if (link.textContent.toLowerCase().includes(searchLower)) {
                            hasMatch = true;
                        }
                    });
                }
            }
            
            // Mostrar solo si cumple ambas condiciones
            const shouldShow = hasMatch && categoryMatch;
            card.style.display = shouldShow ? '' : 'none';
        });
    }

    toggleDocument(docId) {
        const content = document.getElementById(`content-${docId}`);
        const toggle = content.previousElementSibling.querySelector('.document-toggle');
        
        content.classList.toggle('active');
        toggle.classList.toggle('active');
    }

    viewMacro(macroId) {
        const macro = this.macrosData.find(m => m.id === macroId);
        if (macro) {
            alert(`Macro: ${macro.title}\n\n${macro.content}`);
        }
    }

    copyMacro(macroId) {
        const macro = this.macrosData.find(m => m.id === macroId);
        if (macro) {
            navigator.clipboard.writeText(macro.content).then(() => {
                alert('Macro copiada al portapapeles');
            });
        }
    }

    // Data loading methods
    loadMacrosData() {
        return [
            {
                "id": "1",
                "title": "[ACQ] - Registro: ¬øPuedo utilizar mi tarjeta d√©bito para retiros en el exterior?",
                "category": "inscripcion-registro",
                "category_title": "Inscripci√≥n y Registro",
                "lastUpdated": "2024-10-03",
                "content": "S√≠, puedes hacer retiros en efectivo con tu tarjeta d√©bito Nu en una gran cantidad de cajeros electr√≥nicos de la red Mastercard a nivel nacional o internacional. Ten presente que el l√≠mite para avances internacionales ser√≠a la equivalencia, en la moneda del pa√≠s donde se haga el avance, de los $2.700.000,00 COP, en un lapso de 24 horas."
            },
            {
                "id": "2",
                "title": "[ACQ] - Registro: ¬øQu√© diferencia tienen Bre-B y Redeban?",
                "category": "inscripcion-registro",
                "category_title": "Inscripci√≥n y Registro",
                "lastUpdated": "2024-10-03",
                "content": "En la siguiente tabla te contamos las diferencias principales: Transferencias con llaves de Redeban: Ya est√° disponible en Nu. Permite pagos r√°pidos entre bancos como Bancolombia, Nequi, y otros que usan Redeban."
            },
            {
                "id": "3",
                "title": "[ACQ] - Data policy: Mensaje sobre p√©rdida de acceso a productos Nu",
                "category": "inscripcion-registro",
                "category_title": "Inscripci√≥n y Registro",
                "lastUpdated": "2024-10-03",
                "content": "Para nosotros es muy importante contar con tu autorizaci√≥n, para seguir tratando tus datos personales conforme a nuestra nueva Pol√≠tica de Tratamiento de Datos Personales, es por ello, que es necesario que la revises y aceptes, para que puedas usar tus productos Nu sin problemas."
            },
            {
                "id": "4",
                "title": "[ACQ] - Data policy: ¬øCu√°l es la diferencia entre la Pol√≠tica de datos del 2024 y del 2025?",
                "category": "inscripcion-registro",
                "category_title": "Inscripci√≥n y Registro",
                "lastUpdated": "2024-10-03",
                "content": "Queremos contarte que actualizamos nuestra Pol√≠tica de Tratamiento de Datos Personales para darte mayor claridad sobre c√≥mo usamos tu informaci√≥n y reforzar nuestro compromiso con tu privacidad."
            },
            {
                "id": "5",
                "title": "[ACQ] - Data policy: ¬øC√≥mo puedo aceptar la Pol√≠tica de Tratamiento de Datos 2025?",
                "category": "inscripcion-registro", 
                "category_title": "Inscripci√≥n y Registro",
                "lastUpdated": "2024-10-03",
                "content": "Puedes leer y aceptar nuestra nueva Pol√≠tica de Tratamiento de Datos, de las siguientes formas: 1. Al ingresar a tu App Nu, te aparecer√° un anuncio con la nueva Pol√≠tica de Tratamiento de Datos Personales, para que la revises y aceptes."
            },
            {
                "id": "6",
                "title": "[ACQ] - Data policy: ¬øPor qu√© debo aceptar esta nueva Pol√≠tica de Tratamiento de Datos?",
                "category": "inscripcion-registro",
                "category_title": "Inscripci√≥n y Registro", 
                "lastUpdated": "2024-10-03",
                "content": "T√∫ tienes el control de la informaci√≥n que compartes con nosotros, y aceptarla es clave para seguir usando tus productos Nu sin preocupaciones."
            },
            {
                "id": "7",
                "title": "[ACQ] - Prospecto abandoned: No s√© en qu√© pantalla est√° la persona",
                "category": "inscripcion-registro",
                "category_title": "Inscripci√≥n y Registro",
                "lastUpdated": "2024-10-03",
                "content": "Para m√≠ ser√° todo un gusto ayudarte üíú, para poder entender mejor tu consulta. Me puedes describir/contar en que paso del registro estas."
            },
            {
                "id": "8",
                "title": "[ACQ] - Prospectos que pueden acceder al home screen",
                "category": "inscripcion-registro",
                "category_title": "Inscripci√≥n y Registro",
                "lastUpdated": "2024-10-03",
                "content": "Gracias por contarnos lo sucedido. Queremos informarte que tu proceso de registro est√° en la etapa de validaci√≥n. Esto es parte de nuestro procedimiento est√°ndar para asegurarnos de ofrecerte el mejor servicio posible."
            },
            {
                "id": "9", 
                "title": "[ACQ] - Registro: Despu√©s de poner la direcci√≥n, ¬øpuedo actualizarla?",
                "category": "inscripcion-registro",
                "category_title": "Inscripci√≥n y Registro",
                "lastUpdated": "2024-10-03",
                "content": "Si puedes actualizar tus datos, tambi√©n puedes indicarnos una direcci√≥n de entrega diferente a la de residencia si lo prefieres. Solo ten en cuenta que la direcci√≥n donde se entregue la tarjeta debe contar con nomenclatura visible."
            },
            {
                "id": "10",
                "title": "[ACQ] - Registro: Hago clic en el link de confirmaci√≥n y no funciona",
                "category": "inscripcion-registro",
                "category_title": "Inscripci√≥n y Registro",
                "lastUpdated": "2024-10-03",
                "content": "Puedes intentar el proceso desde un computador, al darle clic al link vas a ser redirigido a nuestra p√°gina web, donde vas a ingresar tu n√∫mero de documento y tu correo registrado."
            },
            {
                "id": "11",
                "title": "[ACQ] - Registro: Las fotos me est√°n saliendo borrosas, ¬øqu√© puedo hacer?",
                "category": "inscripcion-registro",
                "category_title": "Inscripci√≥n y Registro",
                "lastUpdated": "2024-10-03",
                "content": "Para la situaci√≥n que presentas, te recomiendo buscar un lugar iluminado, pero que no afecte la visibilidad de los documentos. Tambi√©n, puedes colocar tu documento de identidad sobre una mesa."
            },
            {
                "id": "12",
                "title": "[MGM] - Invitar amigos: ¬øC√≥mo funciona?",
                "category": "mgm-referidos",
                "category_title": "Invitar Amigos",
                "lastUpdated": "2024-10-03",
                "content": "Nos encanta que quieras compartir la experiencia Nu con tus amigos y familiares! En la pantalla principal de la app da clic al bot√≥n de invitar amigos que se encuentran situado en la parte superior izquierda."
            }
        ];
    }

    loadWedukasData() {
        return [
            // Vanguard/Venus Documents (24 total)
            {"id": "1", "title": "Ruta de activaci√≥n de productos", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4111", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "2", "title": "Dudas de prospectos sobre la Adquisici√≥n de CDTs", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4110", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "3", "title": "Gesti√≥n de correos en Zendesk", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4107", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "4", "title": "FoN: Criterios de aprobaci√≥n y validaci√≥n de selfies", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4101", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "5", "title": "Pagar√©s", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4104", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "6", "title": "FoN: Invalidaci√≥n de documentos y sospecha de fraude", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4252", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "7", "title": "FoN-Documentos Rechazados FoN Low Risk", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4098", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "8", "title": "Experiencia cross-sell en Nu", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4112", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "9", "title": "Pantalla principal de la App", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4089", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "10", "title": "Cancelaci√≥n de la invitaci√≥n a Nu para prospectos", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4109", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "11", "title": "FoN: Documentos aceptados FoN Low Risk", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4253", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "12", "title": "¬øC√≥mo escalar Secondary Jobs desde Shuffle?", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4026", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "13", "title": "Caracter√≠sticas b√°sicas de la c√©dula amarilla", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4105", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "14", "title": "FoN: Conceptos generales de Fraud or Not Low Risk", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4106", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "15", "title": "Gesti√≥n de Contact Reasons tercerizadas", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4146", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "16", "title": "Inscripci√≥n y registro al mundo Nu", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4021", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "17", "title": "Piloto: ¬°Impulsa tus Metas! / Test MGM", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4103", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "18", "title": "Flujo de registro: Tarjeta de Cr√©dito NuControl", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4310", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "19", "title": "Campa√±a: Cajitas para mi Gente", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4254", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "20", "title": "QA Process", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4288", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "21", "title": "Inconvenientes en el proceso de adquisici√≥n", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4366", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "22", "title": "PEPs - Tag REQUESTED_PEP_INFO", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4375", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "23", "title": "[REGSOL-KYCOPS] Tag KYC_INFO_REQUESTED", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4376", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            {"id": "24", "title": "Implementaci√≥n Case Management", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4384", "category": "vanguard-venus", "category_title": "Vanguard/Venus"},
            
            // Nu Documents (40 total)
            {"id": "25", "title": "Contact Reasons Team Acquisition", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2008", "category": "nu", "category_title": "Nu"},
            {"id": "26", "title": "Perfil con status AR Cancelled", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=1978", "category": "nu", "category_title": "Nu"},
            {"id": "27", "title": "PV con status Confirmed/Released que no se libera", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=1981", "category": "nu", "category_title": "Nu"},
            {"id": "28", "title": "QA Process", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2837", "category": "nu", "category_title": "Nu"},
            {"id": "29", "title": "Estados de los PV en el proceso de adquisici√≥n", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=2006", "category": "nu", "category_title": "Nu"},
            {"id": "30", "title": "Status Abandoned en el PV", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2077", "category": "nu", "category_title": "Nu"},
            {"id": "31", "title": "Reportes / Jira Service Desk Acquisition", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2047", "category": "nu", "category_title": "Nu"},
            {"id": "32", "title": "[ACQ] - ¬øC√≥mo aprobar Stuck Prospects?", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=1988", "category": "nu", "category_title": "Nu"},
            {"id": "33", "title": "Typo en Fecha de Nacimiento (DoB) y Nombres o Apellidos incompletos (REGISTRO)", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2138", "category": "nu", "category_title": "Nu"},
            {"id": "34", "title": "Instant Release FoN: Selfie sin Documento", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2574", "category": "nu", "category_title": "Nu"},
            {"id": "35", "title": "Docs Request: ¬øC√≥mo y cu√°ndo solicitar documentos nuevamente?", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=1874", "category": "nu", "category_title": "Nu"},
            {"id": "36", "title": "Flujo de registro: Tarjeta de Cr√©dito NuControl", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3363", "category": "nu", "category_title": "Nu"},
            {"id": "37", "title": "Test activaci√≥n de productos: descuento tasa de inter√©s", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3608", "category": "nu", "category_title": "Nu"},
            {"id": "38", "title": "[ACQ] - App de Nu: Soporte b√°sico", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2868", "category": "nu", "category_title": "Nu"},
            {"id": "39", "title": "Banca Abierta / Open Banking", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=1724", "category": "nu", "category_title": "Nu"},
            {"id": "40", "title": "Credit Score / Puntaje Crediticio de Datacr√©dito", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2067", "category": "nu", "category_title": "Nu"},
            {"id": "41", "title": "Cancelaci√≥n de la invitaci√≥n a Nu para prospectos (no clientes)", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=3187", "category": "nu", "category_title": "Nu"},
            {"id": "42", "title": "Prospectos que solicitan no continuar con el proceso de registro", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2063", "category": "nu", "category_title": "Nu"},
            {"id": "43", "title": "Pantalla principal de la App de Nu", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3155", "category": "nu", "category_title": "Nu"},
            {"id": "44", "title": "¬øC√≥mo escalar secondary jobs al team de ACQ?", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2720", "category": "nu", "category_title": "Nu"},
            {"id": "45", "title": "FoN: Generalidades de FoN Low Risk", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3200", "category": "nu", "category_title": "Nu"},
            {"id": "46", "title": "Gesti√≥n Secondary Jobs Xpeers ACQ", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3207", "category": "nu", "category_title": "Nu"},
            {"id": "47", "title": "FoN sin CC/CE / Prospecto esperando reexpedici√≥n o reemisi√≥n", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=1962", "category": "nu", "category_title": "Nu"},
            {"id": "48", "title": "[ACQ] - Fraud o Not (FoN): Low Risk", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2055", "category": "nu", "category_title": "Nu"},
            {"id": "49", "title": "Notificaciones en Shuffle y C√≥mo configurar las Notificaciones en la App", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2140", "category": "nu", "category_title": "Nu"},
            {"id": "50", "title": "¬øQu√© es Republish en Nu?", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2433", "category": "nu", "category_title": "Nu"},
            {"id": "51", "title": "Gesti√≥n de contact reason Acquisition", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3300", "category": "nu", "category_title": "Nu"},
            {"id": "52", "title": "Invitado no recibe correo de confirmaci√≥n / Link m√°gico", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2254", "category": "nu", "category_title": "Nu"},
            {"id": "53", "title": "Darse de baja en las notificaciones no obligatorias (clientes)", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=2491", "category": "nu", "category_title": "Nu"},
            {"id": "54", "title": "Piloto: ¬°Impulsa tus Metas! / Test MGM", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3871", "category": "nu", "category_title": "Nu"},
            {"id": "55", "title": "[ACQ] - Flujo de registro: Tarjeta Abre Caminos", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3069", "category": "nu", "category_title": "Nu"},
            {"id": "56", "title": "Experiencia cross-sell en Nu", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3810", "category": "nu", "category_title": "Nu"},
            {"id": "57", "title": "Inscripci√≥n y registro al mundo Nu para prospectos nuevos", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3902", "category": "nu", "category_title": "Nu"},
            {"id": "58", "title": "Ruta de activaci√≥n de productos", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3769", "category": "nu", "category_title": "Nu"},
            {"id": "59", "title": "Dudas de prospectos sobre la adquisici√≥n de CDTs", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3728", "category": "nu", "category_title": "Nu"},
            {"id": "60", "title": "Pagar√©s", "link": "http://nucolombia.myweduka.com/DocumentFind?idDocument=3292", "category": "nu", "category_title": "Nu"},
            {"id": "61", "title": "Inconvenientes en el proceso de adquisici√≥n", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=3934", "category": "nu", "category_title": "Nu"},
            {"id": "62", "title": "Yellow Docs", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=3937", "category": "nu", "category_title": "Nu"},
            {"id": "63", "title": "Flujo de registro: Tarjeta Abre Caminos", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=3069", "category": "nu", "category_title": "Nu"},
            {"id": "64", "title": "Implementaci√≥n Case Management", "link": "https://nucolombia.myweduka.com/DocumentFind/Document?idDocument=4378", "category": "nu", "category_title": "Nu"}
        ];
    }

    loadProcessData() {
        return {
            'inscripcion-registro': {
                title: 'Inscripci√≥n y Registro',
                steps: [
                    'Verificar documentos de identidad del cliente',
                    'Validar informaci√≥n personal y financiera',
                    'Explicar el proceso paso a paso al cliente',
                    'Documentar cualquier inconveniente en el sistema',
                    'Hacer seguimiento del proceso de validaci√≥n'
                ]
            },
            'mgm-referidos': {
                title: 'Invitar Amigos (MGM)',
                steps: [
                    'Explicar c√≥mo funciona el programa de referidos',
                    'Mostrar c√≥mo compartir el enlace de invitaci√≥n',
                    'Verificar el estado de invitaciones previas',
                    'Explicar los beneficios y recompensas',
                    'Resolver problemas con invitaciones'
                ]
            },
            'activacion-productos': {
                title: 'Activaci√≥n de Productos',
                steps: [
                    'Verificar el estado del producto en el sistema',
                    'Guiar al cliente en el proceso de activaci√≥n',
                    'Verificar que el cliente complete las misiones',
                    'Resolver problemas t√©cnicos de activaci√≥n',
                    'Confirmar que el producto est√© funcionando'
                ]
            },
            'nucontrol-registro': {
                title: 'NuControl',
                steps: [
                    'Explicar las caracter√≠sticas del producto NuControl',
                    'Verificar elegibilidad del cliente',
                    'Guiar en el proceso de solicitud',
                    'Explicar t√©rminos y condiciones espec√≠ficos',
                    'Hacer seguimiento de la solicitud'
                ]
            },
            'data-policy': {
                title: 'Pol√≠tica de Datos',
                steps: [
                    'Explicar la importancia de la nueva pol√≠tica',
                    'Mostrar c√≥mo acceder y revisar la pol√≠tica',
                    'Guiar en el proceso de aceptaci√≥n',
                    'Resolver dudas sobre tratamiento de datos',
                    'Confirmar que la pol√≠tica fue aceptada'
                ]
            },
            'problemas-registro': {
                title: 'Problemas de Registro',
                steps: [
                    'Identificar el tipo espec√≠fico de problema',
                    'Verificar el estado actual del registro',
                    'Aplicar soluci√≥n seg√∫n el tipo de error',
                    'Escalar a soporte t√©cnico si es necesario',
                    'Hacer seguimiento hasta la resoluci√≥n'
                ]
            }
        };
    }

    getResponseTemplates() {
        return {
            'inscripcion-registro': 'Hola, te ayudo con tu proceso de registro. Para completar exitosamente tu inscripci√≥n, necesitamos verificar tu identidad y validar la informaci√≥n proporcionada. Este es un proceso est√°ndar que garantiza la seguridad de tu cuenta. ¬øEn qu√© paso espec√≠fico del registro te encuentras?',
            'mgm-referidos': 'Hola, ¬°nos encanta que quieras compartir Nu con tus amigos! El programa de referidos te permite invitar personas y obtener beneficios. En la app, ve al bot√≥n "Invitar amigos" en la parte superior. Puedes compartir tu enlace por WhatsApp, email o redes sociales. ¬øTe ayudo con alg√∫n paso espec√≠fico?',
            'activacion-productos': 'Hola, te ayudo con la activaci√≥n de tu producto Nu. Una vez completado tu registro, podr√°s activar y configurar tus productos. Es importante completar las misiones para familiarizarte con todas las funcionalidades. ¬øQu√© producto espec√≠fico quieres activar?',
            'nucontrol-registro': 'Hola, te comparto informaci√≥n sobre NuControl. Es nuestra tarjeta de cr√©dito con caracter√≠sticas especiales dise√±adas para acompa√±arte en tu viaje financiero. Tiene condiciones preferenciales y beneficios √∫nicos. ¬øTe gustar√≠a conocer m√°s detalles sobre este producto?',
            'data-policy': 'Hola, te ayudo con la nueva Pol√≠tica de Tratamiento de Datos. Es importante que la revises y aceptes para continuar usando tus productos Nu. Puedes encontrarla en tu app o en el correo que te enviamos. Tu privacidad es muy importante para nosotros. ¬øTienes alguna duda espec√≠fica?',
            'problemas-registro': 'Hola, te ayudo a resolver el problema con tu registro. Hay diferentes tipos de inconvenientes que pueden presentarse. Para darte la mejor soluci√≥n, necesito que me cuentes exactamente qu√© error o dificultad est√°s experimentando. ¬øPodr√≠as describirme el problema?',
            'default': 'Hola, gracias por contactarnos. He revisado tu consulta y te ayudo inmediatamente. Para brindarte la mejor soluci√≥n, necesito algunos datos adicionales. Por favor comp√°rteme m√°s detalles sobre tu situaci√≥n.'
        };
    }

    // Modal functions
    openModal(modalId) {
        const modal = document.getElementById(modalId);
        modal.style.display = 'block';
        document.body.style.overflow = 'hidden';
        
        // Close on background click
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                this.closeModal(modalId);
            }
        });
    }

    closeModal(modalId) {
        const modal = document.getElementById(modalId);
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    }

    // Training Module Functions
    getScenarioPool() {
        return [
            {
                case: {
                    client: "Mar√≠a Gonz√°lez",
                    message: "Hola, quiero saber qu√© necesito para sacar la tarjeta de cr√©dito Nu. ¬øCu√°les son los requisitos?",
                    mission: "Clasificar correctamente esta consulta de adquisici√≥n inicial"
                },
                quiz: {
                    options: [
                        "acquisition.first-time-application",
                        "acquisition.cross-sell",
                        "acquisition.new-products-request",
                        "acquisition.soft-decline"
                    ],
                    correctAnswer: 0
                },
                feedback: {
                    correct: "¬°Excelente! Es una consulta de adquisici√≥n inicial de un prospecto que quiere informaci√≥n sobre requisitos.",
                    incorrect: "Esta es una consulta t√≠pica de 'acquisition.first-time-application' - un prospecto pidiendo informaci√≥n sobre requisitos para obtener el producto por primera vez."
                },
                response: {
                    robotic: "Para obtener la tarjeta de cr√©dito debe cumplir los requisitos establecidos en nuestros t√©rminos y condiciones.",
                    human: "¬°Hola Mar√≠a! Me da mucho gusto que quieras conocer Nu. Te explico f√°cil: necesitas ser mayor de edad, tener c√©dula colombiana y ingresos desde $800,000. El proceso es s√∫per sencillo y te acompa√±o en cada paso. ¬øTe parece si empezamos?"
                },
                learnings: [
                    "Los prospectos buscan informaci√≥n clara y did√°ctica sobre requisitos",
                    "Usar el nombre del cliente y un tono cercano",
                    "Explicar de forma simple, como a un familiar"
                ]
            },
            {
                case: {
                    client: "Carlos P√©rez",
                    message: "Me lleg√≥ un correo diciendo que me rechazaron la solicitud. ¬øPor qu√© no me aprobaron la tarjeta?",
                    mission: "Identificar el tipo de consulta post-declinaci√≥n"
                },
                quiz: {
                    options: [
                        "acquisition.soft-decline",
                        "acquisition.first-time-application",
                        "acquisition.opt-out",
                        "acquisition.invite"
                    ],
                    correctAnswer: 0
                },
                feedback: {
                    correct: "¬°Perfecto! Es un caso de 'soft-decline' - prospecto declinado que pregunta por las razones.",
                    incorrect: "Esto es 'acquisition.soft-decline' - cuando un prospecto declinado pregunta por el estado o razones de la declinaci√≥n."
                },
                response: {
                    robotic: "Su solicitud fue evaluada por nuestro sistema y no cumple con los criterios establecidos.",
                    human: "Hola Carlos, entiendo tu frustraci√≥n y lamento que hayas tenido esta experiencia. Te explico: nuestro algoritmo eval√∫a muchos factores y a veces es muy exigente. Esto no significa que no seas una persona confiable, simplemente que en este momento no pudimos ofrecerte el producto. ¬øTe gustar√≠a que revisemos si hay algo que podamos hacer?"
                },
                learnings: [
                    "Validar los sentimientos del cliente (frustraci√≥n, decepci√≥n)",
                    "Explicar sin culpar al cliente",
                    "Ser transparente sobre el proceso de evaluaci√≥n"
                ]
            },
            {
                case: {
                    client: "Ana Rodr√≠guez",
                    message: "¬øC√≥mo puedo invitar a un amigo a Nu? No encuentro la opci√≥n en la app.",
                    mission: "Clasificar una consulta sobre el programa de referidos"
                },
                quiz: {
                    options: [
                        "others.referrals",
                        "acquisition.first-time-application",
                        "others.app-issues",
                        "notification.unsubscribe"
                    ],
                    correctAnswer: 0
                },
                feedback: {
                    correct: "¬°Excelente! Es una consulta sobre MGM - invitar amigos/referidos.",
                    incorrect: "Esta es una consulta de 'others.referrals' - preguntas sobre el programa MGM (invitar amigos)."
                },
                response: {
                    robotic: "Para invitar usuarios debe acceder a la secci√≥n de referidos en la aplicaci√≥n.",
                    human: "¬°Hola Ana! Qu√© genial que quieras compartir Nu con tus amigos. Te explico paso a paso: en la app, ve a la secci√≥n 'Invita y gana' que est√° en el men√∫ principal. Ah√≠ podr√°s generar tu link personalizado y envi√°rselo. Cuando tu amigo se registre usando tu link, ¬°ambos reciben beneficios! ¬øTe ayudo a encontrarlo?"
                },
                learnings: [
                    "Los clientes quieren instrucciones paso a paso",
                    "Mostrar entusiasmo por su inter√©s en referir",
                    "Explicar los beneficios del programa"
                ]
            },
            {
                case: {
                    client: "Luis Morales",
                    message: "Ya no quiero seguir con el proceso de registro. ¬øC√≥mo cancelo mi solicitud?",
                    mission: "Identificar cuando un prospecto desiste del proceso"
                },
                quiz: {
                    options: [
                        "acquisition.opt-out",
                        "acquisition.soft-decline",
                        "acquisition.first-time-application",
                        "regsol.pep-edd-contacts"
                    ],
                    correctAnswer: 0
                },
                feedback: {
                    correct: "¬°Correcto! Es un 'opt-out' - prospecto que ya no desea continuar con el proceso.",
                    incorrect: "Esta es una consulta de 'acquisition.opt-out' - prospecto que desiste y quiere cancelar su proceso."
                },
                response: {
                    robotic: "Su solicitud ser√° cancelada seg√∫n lo solicitado. Los datos ser√°n eliminados del sistema.",
                    human: "Hola Luis, entiendo tu decisi√≥n y la respeto completamente. Si cambias de opini√≥n en el futuro, siempre ser√°s bienvenido. Para cancelar tu proceso, yo me encargo de todo - no necesitas hacer nada adicional. Tus datos ser√°n eliminados de forma segura. ¬øHay algo espec√≠fico que te hizo cambiar de opini√≥n? Tu feedback nos ayuda a mejorar."
                },
                learnings: [
                    "Respetar la decisi√≥n del cliente sin presionar",
                    "Ofrecer soporte para procesos futuros",
                    "Aprovechar para obtener feedback constructivo"
                ]
            },
            {
                case: {
                    client: "Sandra L√≥pez",
                    message: "La app se me cierra cada vez que trato de tomar la foto de mi c√©dula. No puedo avanzar.",
                    mission: "Identificar un problema t√©cnico en el proceso de registro"
                },
                quiz: {
                    options: [
                        "acquisition.invite",
                        "others.app-issues",
                        "acquisition.first-time-application",
                        "acquisition.soft-decline"
                    ],
                    correctAnswer: 0
                },
                feedback: {
                    correct: "¬°Perfecto! Es 'acquisition.invite' - problemas t√©cnicos durante el proceso de registro.",
                    incorrect: "Esta es una consulta de 'acquisition.invite' - inconvenientes t√©cnicos durante el proceso de adquisici√≥n."
                },
                response: {
                    robotic: "Reporte el error t√©cnico para que sea resuelto por el equipo correspondiente.",
                    human: "Hola Sandra, lamento mucho que est√©s teniendo esta dificultad. Entiendo lo frustrante que debe ser. Vamos a solucionarlo juntos: primero, intenta cerrar completamente la app y volver a abrirla. Si persiste, prueba actualizando la app o reiniciando tu tel√©fono. Mientras tanto, yo estoy reportando este error para que nuestro equipo t√©cnico lo revise. ¬øEn qu√© tipo de celular te est√° pasando esto?"
                },
                learnings: [
                    "Mostrar empat√≠a ante problemas t√©cnicos",
                    "Ofrecer soluciones paso a paso",
                    "Asumir responsabilidad del problema y dar seguimiento"
                ]
            },
            {
                case: {
                    client: "Diego Mart√≠n",
                    message: "Ya tengo la cuenta Nu, ¬øc√≥mo puedo obtener tambi√©n la tarjeta de cr√©dito?",
                    mission: "Clasificar una consulta de producto adicional"
                },
                quiz: {
                    options: [
                        "acquisition.cross-sell",
                        "acquisition.first-time-application",
                        "acquisition.new-products-request",
                        "others.app-issues"
                    ],
                    correctAnswer: 0
                },
                feedback: {
                    correct: "¬°Genial! Es 'acquisition.cross-sell' - cliente que quiere adquirir un producto adicional.",
                    incorrect: "Esta es una consulta de 'acquisition.cross-sell' - cliente existente que busca un producto adicional."
                },
                response: {
                    robotic: "Para obtener productos adicionales debe verificar las ofertas disponibles en su perfil.",
                    human: "¬°Hola Diego! Qu√© bueno saber que ya eres parte de la familia Nu con tu cuenta. Para la tarjeta de cr√©dito, lo primero es revisar si tienes una oferta activa en tu app - la encontrar√≠as en la pantalla principal como un banner. Si no la ves, significa que nuestro algoritmo a√∫n est√° evaluando tu perfil. Tranquilo, esto puede tomar algunas semanas. Mientras tanto, usa activamente tu cuenta Nu, ¬°eso ayuda mucho!"
                },
                learnings: [
                    "Reconocer que ya es cliente de Nu",
                    "Dar instrucciones claras sobre d√≥nde buscar ofertas",
                    "Explicar el proceso de evaluaci√≥n sin crear falsas expectativas"
                ]
            }
        ];
    }

    initializeTrainingSimulation() {
        const agentNameInput = document.getElementById('agent-name');
        this.agentName = agentNameInput.value.trim();
        
        if (!this.agentName) {
            alert('Por favor, ingresa tu nombre para continuar.');
            return;
        }

        // Reset variables
        this.scenarios = [];
        this.currentScenarioIndex = 0;
        this.score = 0;
        this.incorrectAnswers = [];
        this.selectedAnswer = null;

        // Select 5 random scenarios
        const scenarioPool = this.getScenarioPool();
        const shuffled = [...scenarioPool].sort(() => 0.5 - Math.random());
        this.scenarios = shuffled.slice(0, 5);

        // Update welcome screen
        document.getElementById('welcome-name').textContent = this.agentName;
        
        this.showTrainingScreen('welcome-screen');
    }

    startTrainingQuiz() {
        this.showTrainingScreen('case-study-screen');
        this.loadScenario(0);
    }

    showTrainingScreen(screenId) {
        // Hide all screens
        document.querySelectorAll('.training-screen').forEach(screen => {
            screen.classList.remove('active');
        });
        
        // Show target screen
        document.getElementById(screenId).classList.add('active');
    }

    loadScenario(index) {
        this.currentScenarioIndex = index;
        const scenario = this.scenarios[index];
        
        // Update progress
        const progressPercent = ((index + 1) / 5) * 100;
        document.getElementById('progress-fill').style.width = `${progressPercent}%`;
        document.getElementById('progress-text').textContent = `Pregunta ${index + 1} de 5`;
        
        // Load case content
        document.getElementById('client-name').textContent = scenario.case.client;
        document.getElementById('client-message').textContent = scenario.case.message;
        document.getElementById('mission-text').textContent = scenario.case.mission;
    }

    showQuiz() {
        this.showTrainingScreen('quiz-screen');
        const scenario = this.scenarios[this.currentScenarioIndex];
        
        // Update progress
        const progressPercent = ((this.currentScenarioIndex + 1) / 5) * 100;
        document.getElementById('progress-fill-quiz').style.width = `${progressPercent}%`;
        document.getElementById('progress-text-quiz').textContent = `Pregunta ${this.currentScenarioIndex + 1} de 5`;
        
        // Load quiz options
        const optionsContainer = document.getElementById('quiz-options');
        optionsContainer.innerHTML = '';
        
        scenario.quiz.options.forEach((option, index) => {
            const optionDiv = document.createElement('div');
            optionDiv.className = 'quiz-option';
            optionDiv.textContent = option;
            optionDiv.onclick = () => this.selectOption(index);
            optionsContainer.appendChild(optionDiv);
        });
        
        this.selectedAnswer = null;
        document.getElementById('submit-btn').disabled = true;
    }

    selectOption(index) {
        // Remove previous selection
        document.querySelectorAll('#academy-quiz-options .quiz-option').forEach(option => {
            option.classList.remove('selected');
        });
        
        // Select current option
        document.querySelectorAll('.quiz-option')[index].classList.add('selected');
        this.selectedAnswer = index;
        document.getElementById('submit-btn').disabled = false;
    }

    submitAnswer() {
        if (this.selectedAnswer === null) return;
        
        const scenario = this.scenarios[this.currentScenarioIndex];
        const isCorrect = this.selectedAnswer === scenario.quiz.correctAnswer;
        
        if (isCorrect) {
            this.score++;
        } else {
            this.incorrectAnswers.push({
                question: `${scenario.case.client}: ${scenario.case.message}`,
                selectedAnswer: scenario.quiz.options[this.selectedAnswer],
                correctAnswer: scenario.quiz.options[scenario.quiz.correctAnswer]
            });
        }
        
        this.showFeedback(isCorrect);
    }

    showFeedback(isCorrect) {
        this.showTrainingScreen('feedback-screen');
        const scenario = this.scenarios[this.currentScenarioIndex];
        
        const feedbackResult = document.getElementById('feedback-result');
        const feedbackExplanation = document.getElementById('feedback-explanation');
        
        if (isCorrect) {
            feedbackResult.innerHTML = `<h3>‚úÖ ¬°Correcto!</h3>`;
            feedbackResult.className = 'feedback-result correct';
            feedbackExplanation.textContent = scenario.feedback.correct;
        } else {
            feedbackResult.innerHTML = `<h3>‚ùå Incorrecto</h3>`;
            feedbackResult.className = 'feedback-result incorrect';
            feedbackExplanation.innerHTML = `
                <p><strong>Respuesta correcta:</strong> ${scenario.quiz.options[scenario.quiz.correctAnswer]}</p>
                <p>${scenario.feedback.incorrect}</p>
            `;
        }
    }

    showResponse() {
        this.showTrainingScreen('response-screen');
        const scenario = this.scenarios[this.currentScenarioIndex];
        
        document.getElementById('robotic-response').textContent = scenario.response.robotic;
        document.getElementById('human-response').textContent = scenario.response.human;
        
        const learningsList = document.getElementById('learning-points');
        learningsList.innerHTML = '';
        scenario.learnings.forEach(learning => {
            const li = document.createElement('li');
            li.textContent = learning;
            learningsList.appendChild(li);
        });
        
        // Update next button
        const nextBtn = document.getElementById('next-btn');
        if (this.currentScenarioIndex === 4) {
            nextBtn.textContent = 'Ver Resultados';
        } else {
            nextBtn.textContent = 'Siguiente Pregunta';
        }
    }

    nextScenario() {
        if (this.currentScenarioIndex < 4) {
            this.showTrainingScreen('case-study-screen');
            this.loadScenario(this.currentScenarioIndex + 1);
        } else {
            this.showResults();
        }
    }

    showResults() {
        if (this.score === 5) {
            this.showCertificate();
        } else {
            this.showSummary();
        }
    }

    showSummary() {
        this.showTrainingScreen('summary-screen');
        
        document.getElementById('final-score').textContent = this.score;
        
        const scoreMessage = document.getElementById('score-message');
        if (this.score >= 4) {
            scoreMessage.textContent = '¬°Excelente trabajo! Tienes un gran dominio de la clasificaci√≥n de casos.';
        } else if (this.score >= 3) {
            scoreMessage.textContent = '¬°Buen trabajo! Con un poco m√°s de pr√°ctica ser√°s un experto.';
        } else {
            scoreMessage.textContent = 'Sigue practicando. Cada intento te acerca m√°s a la excelencia.';
        }
        
        if (this.incorrectAnswers.length > 0) {
            document.getElementById('incorrect-summary').style.display = 'block';
            const incorrectList = document.getElementById('incorrect-list');
            incorrectList.innerHTML = '';
            
            this.incorrectAnswers.forEach((item, index) => {
                const div = document.createElement('div');
                div.innerHTML = `
                    <p><strong>Pregunta ${index + 1}:</strong> ${item.question}</p>
                    <p><span style="color: #ef4444;">Tu respuesta:</span> ${item.selectedAnswer}</p>
                    <p><span style="color: #22c55e;">Respuesta correcta:</span> ${item.correctAnswer}</p>
                    <hr style="margin: 16px 0;">
                `;
                incorrectList.appendChild(div);
            });
        }
    }

    showCertificate() {
        this.showTrainingScreen('certificate-screen');
        
        document.getElementById('certificate-name').textContent = this.agentName;
        document.getElementById('certificate-date').textContent = new Date().toLocaleDateString('es-CO');
    }

    downloadCertificate() {
        const element = document.getElementById('certificate-content');
        
        html2canvas(element, {
            scale: 2,
            backgroundColor: '#ffffff'
        }).then(canvas => {
            const { jsPDF } = window.jspdf;
            const pdf = new jsPDF('p', 'mm', 'a4');
            
            const imgData = canvas.toDataURL('image/png');
            const imgWidth = 210;
            const pageHeight = 295;
            const imgHeight = (canvas.height * imgWidth) / canvas.width;
            let heightLeft = imgHeight;
            
            let position = 0;
            
            pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
            heightLeft -= pageHeight;
            
            while (heightLeft >= 0) {
                position = heightLeft - imgHeight;
                pdf.addPage();
                pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                heightLeft -= pageHeight;
            }
            
            pdf.save(`Certificado_NuSense_${this.agentName.replace(' ', '_')}.pdf`);
        });
    }

    downloadResults() {
        const csvContent = [
            ['Nombre', 'Puntuaci√≥n', 'Respuestas Incorrectas'],
            [this.agentName, `${this.score}/5`, this.incorrectAnswers.length],
            [],
            ['Detalle de Respuestas Incorrectas:'],
            ...this.incorrectAnswers.map((item, index) => [
                `Pregunta ${index + 1}`,
                `Respuesta: ${item.selectedAnswer}`,
                `Correcta: ${item.correctAnswer}`
            ])
        ].map(row => row.join(',')).join('\n');
        
        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
        const link = document.createElement('a');
        const url = URL.createObjectURL(blob);
        link.setAttribute('href', url);
        link.setAttribute('download', `Resultados_Entrenamiento_${this.agentName.replace(' ', '_')}.csv`);
        link.style.visibility = 'hidden';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }

    restartTrainingSimulation() {
        this.scenarios = [];
        this.currentScenarioIndex = 0;
        this.score = 0;
        this.agentName = '';
        this.incorrectAnswers = [];
        this.selectedAnswer = null;
        
        document.getElementById('agent-name').value = '';
        this.showTrainingScreen('login-screen');
    }

    // Academy Module Functions
    initializeAcademy() {
        console.log('Initializing Academy...');
        
        // Set up navigation
        this.setupAcademyNavigation();
        
        // Show the first activity by default
        document.querySelectorAll('.academy-activity').forEach(act => {
            act.style.display = 'none';
        });
        
        const firstActivity = document.getElementById('clasifica');
        if (firstActivity) {
            firstActivity.style.display = 'block';
            firstActivity.classList.add('active');
        }
        
        // Initialize only the first activity
        this.initializeActivity('clasifica');
    }

    setupAcademyNavigation() {
        const academyTabs = document.querySelectorAll('.academy-tab');
        academyTabs.forEach(tab => {
            tab.addEventListener('click', () => {
                const activity = tab.getAttribute('data-activity');
                console.log('Academy tab clicked:', activity);
                
                // Update active tab
                academyTabs.forEach(t => t.classList.remove('active'));
                tab.classList.add('active');
                
                // Hide all activities
                document.querySelectorAll('.academy-activity').forEach(act => {
                    act.classList.remove('active');
                    act.style.display = 'none';
                });
                
                // Show corresponding activity
                const activityElement = document.getElementById(activity);
                if (activityElement) {
                    activityElement.classList.add('active');
                    activityElement.style.display = 'block';
                    console.log('Showing activity:', activity);
                } else {
                    console.error('Activity element not found:', activity);
                }
                
                // Initialize the selected activity
                this.initializeActivity(activity);
            });
        });
    }

    initializeActivity(activity) {
        console.log('Initializing activity:', activity);
        
        switch(activity) {
            case 'clasifica':
                this.loadRandomCase();
                break;
            case 'humaniza':
                this.loadRandomHumanizeCase();
                break;
            case 'aventura':
                console.log('Starting adventure...');
                this.showAdventureMenu();
                break;
            case 'conocimiento':
                console.log('Starting quiz...');
                // Reset quiz state
                document.getElementById('quiz-feedback').style.display = 'none';
                document.getElementById('quiz-results').style.display = 'none';
                this.startQuiz();
                break;
            case 'memoria':
                // Reset memory challenge to menu
                this.showMemoryMenu();
                break;
        }
    }

    getAcademyData() {
        return {
            clasifica: [
                {
                    case: "Hola, quiero saber qu√© necesito para obtener la tarjeta de cr√©dito Nu. ¬øCu√°les son los requisitos?",
                    options: [
                        "acquisition.first-time-application",
                        "acquisition.cross-sell",
                        "acquisition.new-products-request",
                        "acquisition.soft-decline"
                    ],
                    correct: 0,
                    explanation: "Es una consulta t√≠pica de 'acquisition.first-time-application' - un prospecto pidiendo informaci√≥n sobre requisitos para obtener el producto por primera vez."
                },
                {
                    case: "Me lleg√≥ un correo diciendo que me rechazaron la solicitud. ¬øPor qu√© no me aprobaron?",
                    options: [
                        "acquisition.soft-decline",
                        "acquisition.first-time-application",
                        "acquisition.opt-out",
                        "acquisition.invite"
                    ],
                    correct: 0,
                    explanation: "Esto es 'acquisition.soft-decline' - cuando un prospecto declinado pregunta por el estado o razones de la declinaci√≥n."
                },
                {
                    case: "¬øC√≥mo puedo invitar a un amigo a Nu? No encuentro la opci√≥n en la app.",
                    options: [
                        "others.referrals",
                        "acquisition.first-time-application",
                        "others.app-issues",
                        "notification.unsubscribe"
                    ],
                    correct: 0,
                    explanation: "Esta es una consulta de 'others.referrals' - preguntas sobre el programa MGM (invitar amigos)."
                },
                {
                    case: "Ya no quiero seguir con el proceso de registro. ¬øC√≥mo cancelo mi solicitud?",
                    options: [
                        "acquisition.opt-out",
                        "acquisition.soft-decline",
                        "acquisition.first-time-application",
                        "regsol.pep-edd-contacts"
                    ],
                    correct: 0,
                    explanation: "Esta es una consulta de 'acquisition.opt-out' - prospecto que desiste y quiere cancelar su proceso."
                },
                {
                    case: "Ya tengo la cuenta Nu, ¬øc√≥mo puedo obtener tambi√©n la tarjeta de cr√©dito?",
                    options: [
                        "acquisition.cross-sell",
                        "acquisition.first-time-application",
                        "acquisition.new-products-request",
                        "others.app-issues"
                    ],
                    correct: 0,
                    explanation: "Esta es una consulta de 'acquisition.cross-sell' - cliente existente que busca un producto adicional."
                },
                {
                    case: "La app se me cierra cada vez que trato de tomar la foto de mi c√©dula. No puedo avanzar.",
                    options: [
                        "acquisition.invite",
                        "others.app-issues",
                        "acquisition.first-time-application",
                        "acquisition.soft-decline"
                    ],
                    correct: 0,
                    explanation: "Esta es una consulta de 'acquisition.invite' - inconvenientes t√©cnicos durante el proceso de adquisici√≥n."
                },
                {
                    case: "Me ofrecieron una tarjeta con cuota de manejo, pero yo no la quer√≠a. ¬øC√≥mo la cancelo?",
                    options: [
                        "acquisition.unwanted-product-offer",
                        "acquisition.opt-out",
                        "acquisition.cross-sell",
                        "acquisition.first-time-application"
                    ],
                    correct: 0,
                    explanation: "Es 'acquisition.unwanted-product-offer' - usuario que termin√≥ con un producto no deseado."
                },
                {
                    case: "¬øNu maneja pr√©stamos personales? Me gustar√≠a solicitar uno.",
                    options: [
                        "acquisition.new-products-request",
                        "acquisition.first-time-application",
                        "acquisition.cross-sell",
                        "others.app-issues"
                    ],
                    correct: 0,
                    explanation: "Es 'acquisition.new-products-request' - consulta sobre productos que Nu no ofrece actualmente."
                },
                {
                    case: "No quiero recibir m√°s correos promocionales de Nu. ¬øC√≥mo me desuscribo?",
                    options: [
                        "notification.unsubscribe",
                        "acquisition.opt-out",
                        "others.app-issues",
                        "others.referrals"
                    ],
                    correct: 0,
                    explanation: "Es 'notification.unsubscribe' - cliente que quiere desactivar notificaciones no obligatorias."
                },
                {
                    case: "Los botones de mi app se ven desordenados y no encuentro algunas opciones.",
                    options: [
                        "others.app-issues",
                        "acquisition.invite",
                        "others.referrals",
                        "notification.unsubscribe"
                    ],
                    correct: 0,
                    explanation: "Es 'others.app-issues' - problemas visuales en la pantalla principal de la aplicaci√≥n."
                },
                {
                    case: "Cancel√© mi cuenta Nu hace unos meses y ahora quiero volver a tenerla.",
                    options: [
                        "other.reactivate-request-savings",
                        "acquisition.first-time-application",
                        "acquisition.cross-sell",
                        "acquisition.opt-out"
                    ],
                    correct: 0,
                    explanation: "Es 'other.reactivate-request-savings' - excliente que desea reactivar su Cuenta Nu."
                },
                {
                    case: "Me lleg√≥ un correo pidiendo mi declaraci√≥n de renta. ¬øEs seguro?",
                    options: [
                        "regsol.pep-edd-contacts",
                        "acquisition.invite",
                        "acquisition.soft-decline",
                        "others.app-issues"
                    ],
                    correct: 0,
                    explanation: "Es 'regsol.pep-edd-contacts' - contacto relacionado con solicitudes de informaci√≥n adicional por Regsol."
                }
            ],
            humaniza: [
                {
                    query: "¬øCu√°ndo me llega mi tarjeta de cr√©dito?",
                    macro: "Su tarjeta ser√° enviada en un plazo de 7 a 10 d√≠as h√°biles a la direcci√≥n registrada.",
                    ideal: "¬°Hola! Entiendo tu emoci√≥n por recibir tu nueva tarjeta Nu. Te llegar√° en un plazo de 7 a 10 d√≠as h√°biles a la direcci√≥n que registraste. Mientras tanto, puedes ir prepar√°ndote para disfrutar todos los beneficios. ¬øHay algo m√°s en lo que pueda ayudarte?"
                },
                {
                    query: "Mi solicitud fue rechazada, ¬øpor qu√©?",
                    macro: "Su solicitud no cumpli√≥ con los criterios de evaluaci√≥n establecidos por la entidad.",
                    ideal: "Entiendo que recibir esta noticia puede ser frustrante. Aunque no podemos dar detalles espec√≠ficos por pol√≠ticas de privacidad, te invito a volver a intentarlo en unos meses, ya que nuestros criterios pueden cambiar. ¬°No te desanimes, seguimos aqu√≠ para cuando quieras intentarlo de nuevo!"
                },
                {
                    query: "¬øC√≥mo cancelo mi cuenta?",
                    macro: "Para cancelar su cuenta debe dirigirse a la secci√≥n de configuraci√≥n en la aplicaci√≥n.",
                    ideal: "Lamento que hayas decidido irte. Antes de proceder, ¬øpodr√≠as contarme si hay algo espec√≠fico que no te gust√≥? Tu opini√≥n es muy valiosa para nosotros. Si definitivamente quieres cancelar, puedes hacerlo desde la secci√≥n de configuraci√≥n en tu app."
                },
                {
                    query: "No me funciona la app, se cierra sola",
                    macro: "Debe actualizar la aplicaci√≥n a la versi√≥n m√°s reciente desde la tienda de aplicaciones.",
                    ideal: "¬°Qu√© frustrante debe ser eso! Te entiendo perfectamente. Intentemos solucionarlo juntos. Primero, ¬øpodr√≠as verificar si tienes la versi√≥n m√°s reciente de la app? Si el problema persiste, podemos explorar otras opciones. Estoy aqu√≠ para ayudarte hasta resolverlo."
                },
                {
                    query: "¬øPor qu√© me cobran cuota de manejo en mi tarjeta?",
                    macro: "La cuota de manejo es un costo asociado al mantenimiento de su producto financiero.",
                    ideal: "Entiendo tu pregunta sobre la cuota de manejo. Te explico: es un costo que nos ayuda a mantener todos los servicios y beneficios de tu producto. Sin embargo, d√©jame verificar si hay alguna promoci√≥n o beneficio que puedas aprovechar para optimizar estos costos."
                },
                {
                    query: "No entiendo por qu√© me negaron el cr√©dito",
                    macro: "La evaluaci√≥n crediticia se basa en m√∫ltiples factores establecidos por la entidad.",
                    ideal: "Comprendo tu confusi√≥n, y es completamente normal sentirse as√≠. Aunque no podemos compartir detalles espec√≠ficos de la evaluaci√≥n por temas de privacidad, te aseguro que puedes volver a aplicar m√°s adelante. Cada situaci√≥n es √∫nica y puede cambiar con el tiempo."
                },
                {
                    query: "Quiero hablar con un supervisor",
                    macro: "Su solicitud ser√° escalada al √°rea correspondiente.",
                    ideal: "Por supuesto, entiendo que quieras hablar con alguien m√°s. Antes de conectarte con mi supervisor, ¬øpodr√≠as contarme qu√© est√° pasando? Me gustar√≠a intentar ayudarte primero, pero si prefieres hablar con otra persona, con mucho gusto te conecto."
                },
                {
                    query: "¬øCu√°nto es mi cupo de cr√©dito?",
                    macro: "Su cupo de cr√©dito se encuentra disponible en la secci√≥n de productos de la aplicaci√≥n.",
                    ideal: "¬°Excelente pregunta! Tu cupo aparece en la pantalla principal de tu app, en la secci√≥n de tu tarjeta de cr√©dito. Si no lo ves claramente, puedo guiarte paso a paso para encontrarlo. ¬øTe parece que revisemos juntos?"
                },
                {
                    query: "No puedo hacer pagos desde la app",
                    macro: "Verifique que tenga conexi√≥n a internet estable y fondos suficientes en su cuenta.",
                    ideal: "Entiendo lo molesto que debe ser no poder hacer tus pagos. Vamos a solucionarlo paso a paso. Primero, ¬øpodr√≠as verificar tu conexi√≥n a internet? Tambi√©n revisemos si hay fondos suficientes. Si todo est√° bien, exploremos otras posibles causas juntos."
                },
                {
                    query: "¬øPuedo aumentar mi cupo?",
                    macro: "Las solicitudes de aumento de cupo son evaluadas autom√°ticamente por el sistema.",
                    ideal: "¬°Qu√© bueno que quieras crecer con Nu! Los aumentos de cupo se eval√∫an autom√°ticamente seg√∫n tu comportamiento de pago y otros factores. Te sugiero mantener un buen historial crediticio, y el sistema podr√≠a ofrecerte un aumento en el futuro. ¬øTienes alguna meta espec√≠fica en mente?"
                },
            ],
            aventura: {
                        start: {
                    title: "Cliente Frustrado",
                    text: "Recibes una llamada de Mar√≠a, una cliente que suena muy molesta: 'Llevo 3 d√≠as intentando activar mi tarjeta y nada funciona. Estoy pensando en cancelar todo.'",
                            choices: [
                                { text: "Lo siento, d√©jeme revisar su caso en el sistema.", next: "systematic" },
                                { text: "Entiendo tu frustraci√≥n Mar√≠a, debe ser muy molesto. Cu√©ntame exactamente qu√© has intentado.", next: "empathetic" },
                                { text: "Las activaciones a veces fallan, es normal. ¬øSigui√≥ las instrucciones?", next: "dismissive" }
                            ]
                        },
                        systematic: {
                            title: "Enfoque Sistem√°tico",
                    text: "Mar√≠a responde: 'Ya revis√© todo con otros agentes. Solo quiero que funcione.' Su tono sigue siendo tenso.",
                            choices: [
                                { text: "D√©jeme intentar algo diferente. ¬øPuede abrir la app Nu mientras hablamos?", next: "solution" },
                                { text: "Comprendo que ya revisaste todo. Vamos a solucionarlo de una vez por todas.", next: "solution" }
                            ]
                        },
                        empathetic: {
                            title: "Enfoque Emp√°tico",
                    text: "Mar√≠a se calma un poco: 'Gracias por entenderme. He probado el SMS, la app, llamar... nada funciona.' Su tono es menos agresivo.",
                            choices: [
                                { text: "Has hecho todo correctamente Mar√≠a. Vamos a revisar juntos paso a paso.", next: "success" },
                                { text: "Perfecto, con esa informaci√≥n puedo ayudarte mejor. Empecemos de nuevo.", next: "success" }
                            ]
                        },
                        dismissive: {
                            title: "Enfoque Desestimativo",
                    text: "Mar√≠a se molesta m√°s: '¬°Por supuesto que segu√≠ las instrucciones! ¬øCreen que soy tonta?' Est√° considerando seriamente cancelar.",
                            choices: [
                                { text: "No quise implicar eso. D√©jeme ayudarla de verdad.", next: "recovery" },
                                { text: "Entiendo, vamos a solucionarlo inmediatamente.", next: "recovery" }
                            ]
                        },
                        solution: {
                            title: "Resultado Positivo",
                    text: "Con paciencia y un enfoque estructurado, logras activar la tarjeta. Mar√≠a dice: 'Gracias, al fin funcion√≥. Aprecio su ayuda.'",
                            result: "success",
                            lesson: "Un enfoque sistem√°tico combinado con paciencia puede resolver problemas t√©cnicos efectivamente."
                        },
                        success: {
                            title: "Resultado Excelente",
                    text: "Mar√≠a se siente escuchada y valorada. Despu√©s de resolver el problema, dice: 'Muchas gracias por tu paciencia y comprensi√≥n. Definitivamente seguir√© con Nu.'",
                            result: "success",
                            lesson: "La empat√≠a genuina transforma experiencias negativas en oportunidades de fidelizaci√≥n."
                        },
                        recovery: {
                            title: "Recuperaci√≥n Parcial",
                    text: "Logras resolver el problema t√©cnico, pero Mar√≠a termina la llamada diciendo: 'Est√° solucionado, pero no me gust√≥ c√≥mo empez√≥ esta conversaci√≥n.'",
                            result: "partial",
                            lesson: "Las primeras impresiones son cruciales. Una mala entrada puede afectar toda la experiencia."
                        }
                    },
            conocimiento: [
                {
                    question: "¬øCu√°l es el l√≠mite m√≠nimo de ingresos para aplicar a la tarjeta de cr√©dito Nu?",
                    options: ["$600,000", "$800,000", "$1,200,000", "$1,500,000"],
                    correct: 1,
                    type: "single",
                    explanation: "El l√≠mite m√≠nimo de ingresos para la tarjeta de cr√©dito Nu es de $800,000 mensuales."
                },
                {
                    question: "¬øQu√© documentos son v√°lidos para el proceso de registro? (Selecciona todas las opciones correctas)",
                    options: ["C√©dula de ciudadan√≠a", "C√©dula de extranjer√≠a", "Pasaporte", "Licencia de conducci√≥n"],
                    correct: [0, 1, 2],
                    type: "multiple",
                    explanation: "Son v√°lidos: c√©dula de ciudadan√≠a, c√©dula de extranjer√≠a y pasaporte. La licencia de conducci√≥n NO es v√°lida."
                },
                {
                    question: "¬øCu√°l es la cuota de manejo mensual de la tarjeta NuControl?",
                    options: ["$0", "$10,000", "$15,000", "$20,000"],
                    correct: 2,
                    type: "single",
                    explanation: "La tarjeta NuControl tiene una cuota de manejo mensual de $15,000."
                },
                {
                    question: "¬øEn cu√°ntos d√≠as h√°biles se entrega una tarjeta de cr√©dito Nu?",
                    options: ["3-5 d√≠as", "5-7 d√≠as", "7-10 d√≠as", "10-15 d√≠as"],
                    correct: 2,
                    type: "single",
                    explanation: "Las tarjetas de cr√©dito Nu se entregan en un plazo de 7 a 10 d√≠as h√°biles."
                },
                {
                    question: "¬øCu√°les son caracter√≠sticas del tono Nu? (Selecciona todas las correctas)",
                    options: ["Cercano y emp√°tico", "Formal y distante", "Simple y did√°ctico", "T√©cnico y complejo"],
                    correct: [0, 2],
                    type: "multiple",
                    explanation: "El tono Nu debe ser cercano, emp√°tico, simple y did√°ctico. Evitamos ser formales, distantes o t√©cnicos."
                },
                {
                    question: "¬øQu√© edad m√≠nima se requiere para aplicar a productos Nu?",
                    options: ["16 a√±os", "18 a√±os", "21 a√±os", "25 a√±os"],
                    correct: 1,
                    type: "single",
                    explanation: "La edad m√≠nima para aplicar a productos Nu es de 18 a√±os (mayor√≠a de edad)."
                },
                {
                    question: "¬øCu√°les de estos contact reasons est√°n permitidos para Vanguard/Venus? (Selecciona todas las correctas)",
                    options: ["acquisition.first-time-application", "acquisition.invite", "acquisition.cross-sell", "acquisition.opt-out"],
                    correct: [0, 2, 3],
                    type: "multiple",
                    explanation: "Est√°n permitidos: first-time-application, cross-sell y opt-out. El acquisition.invite NO est√° permitido para Vanguard/Venus."
                },
                {
                    question: "¬øCu√°l es el proceso correcto cuando un cliente est√° frustrado?",
                    options: ["Derivar inmediatamente", "Validar sus sentimientos primero", "Explicar las pol√≠ticas", "Ofrecer descuentos"],
                    correct: 1,
                    type: "single",
                    explanation: "Siempre debemos validar los sentimientos del cliente primero, mostrar empat√≠a antes de ofrecer soluciones."
                }
            ],
            memoria: [
                {
                    case: "Cliente: 'Hola, soy nuevo en Nu y quiero saber qu√© documentos necesito para completar mi registro. Tambi√©n me gustar√≠a conocer cu√°nto tiempo toma el proceso de aprobaci√≥n.'",
                    options: [
                        "acquisition.first-time-application",
                        "acquisition.cross-sell",
                        "acquisition.invite",
                        "acquisition.soft-decline"
                    ],
                    correct: 0,
                    explanation: "Es una consulta t√≠pica de 'acquisition.first-time-application' - prospecto pidiendo informaci√≥n sobre requisitos."
                },
                {
                    case: "Cliente: 'Intent√© tomar la foto de mi c√©dula en la app pero se cierra autom√°ticamente. He reiniciado el tel√©fono varias veces pero sigue pasando lo mismo.'",
                    options: [
                        "acquisition.invite",
                        "others.app-issues",
                        "acquisition.first-time-application",
                        "acquisition.opt-out"
                    ],
                    correct: 0,
                    explanation: "Problemas t√©cnicos durante el proceso de registro son 'acquisition.invite'."
                },
                {
                    case: "Cliente: 'Ya tengo la cuenta Nu desde hace 6 meses y veo que en la app me aparece una oferta para la tarjeta de cr√©dito. ¬øC√≥mo puedo aplicar?'",
                    options: [
                        "acquisition.cross-sell",
                        "acquisition.first-time-application",
                        "acquisition.new-products-request",
                        "others.app-issues"
                    ],
                    correct: 0,
                    explanation: "Cliente existente interesado en producto adicional es 'acquisition.cross-sell'."
                },
                {
                    case: "Prospecto frustrado: 'Me rechazaron la solicitud de la tarjeta y no entiendo por qu√©. Tengo buenos ingresos y nunca he tenido problemas crediticios.'",
                    options: [
                        "acquisition.soft-decline",
                        "acquisition.first-time-application",
                        "acquisition.invite",
                        "regsol.pep-edd-contacts"
                    ],
                    correct: 0,
                    explanation: "Cuando un prospecto declinado pregunta por las razones, es 'acquisition.soft-decline'."
                },
                {
                    case: "Cliente: 'Ya no quiero recibir m√°s correos promocionales de Nu. Me llegan muchos al d√≠a y es molesto. ¬øC√≥mo me desuscribo?'",
                    options: [
                        "acquisition.opt-out",
                        "notification.unsubscribe",
                        "others.app-issues",
                        "others.referrals"
                    ],
                    correct: 1,
                    explanation: "Solicitud para desactivar notificaciones se clasifica como 'notification.unsubscribe'."
                },
                {
                    case: "Cliente: 'Quiero invitar a mi esposa a Nu pero no encuentro c√≥mo hacerlo en la app. ¬øHay alg√∫n programa de referidos?'",
                    options: [
                        "others.referrals",
                        "others.app-issues",
                        "acquisition.first-time-application",
                        "notification.unsubscribe"
                    ],
                    correct: 0,
                    explanation: "Preguntas sobre invitar amigos/familiares son 'others.referrals'."
                },
                {
                    case: "Prospecto: 'Me lleg√≥ un correo de Nu pidiendo mi declaraci√≥n de renta y otros documentos. ¬øEs esto normal y seguro?'",
                    options: [
                        "regsol.pep-edd-contacts",
                        "acquisition.invite",
                        "acquisition.soft-decline",
                        "others.app-issues"
                    ],
                    correct: 0,
                    explanation: "Contactos sobre documentos adicionales solicitados por Regsol son 'regsol.pep-edd-contacts'."
                },
                {
                    case: "Cliente confundido: 'Yo solicit√© una tarjeta de cr√©dito normal pero me dieron una con cuota de manejo. No entiendo por qu√©.'",
                    options: [
                        "acquisition.unwanted-product-offer",
                        "acquisition.cross-sell",
                        "acquisition_fee_card_general_doubts",
                        "others.app-issues"
                    ],
                    correct: 0,
                    explanation: "Cliente con producto no deseado por malentendido es 'acquisition.unwanted-product-offer'."
                },
                {
                    case: "Prospecto: '¬øNu maneja pr√©stamos de libre inversi√≥n o cr√©ditos de veh√≠culo? Necesito financiaci√≥n para comprar un carro.'",
                    options: [
                        "acquisition.new-products-request",
                        "acquisition.first-time-application",
                        "acquisition.cross-sell",
                        "acquisition.cdts_doubts"
                    ],
                    correct: 0,
                    explanation: "Consulta sobre productos no ofertados por Nu es 'acquisition.new-products-request'."
                },
                {
                    case: "Cliente: 'Cancel√© mi cuenta Nu hace 8 meses pero ahora me arrepent√≠. ¬øPuedo volver a abrirla con los mismos datos?'",
                    options: [
                        "other.reactivate-request-savings",
                        "acquisition.first-time-application",
                        "acquisition.cross-sell",
                        "acquisition.opt-out"
                    ],
                    correct: 0,
                    explanation: "Excliente que quiere reactivar Cuenta Nu es 'other.reactivate-request-savings'."
                },
                {
                    case: "Cliente: 'Los botones de mi app Nu se ven raros y desordenados. Algunos no aparecen donde deber√≠an estar.'",
                    options: [
                        "others.app-issues",
                        "acquisition.invite",
                        "others.referrals",
                        "notification.unsubscribe"
                    ],
                    correct: 0,
                    explanation: "Problemas visuales en la pantalla principal de la aplicaci√≥n son 'others.app-issues'."
                },
                {
                    case: "Prospecto: 'Ya no me interesa continuar con el proceso de registro. Quiero cancelar mi solicitud y que eliminen mis datos.'",
                    options: [
                        "acquisition.opt-out",
                        "acquisition.soft-decline",
                        "other.reactivate-request",
                        "acquisition.unwanted-product-offer"
                    ],
                    correct: 0,
                    explanation: "Prospecto que desiste del proceso es 'acquisition.opt-out'."
                },
                {
                    case: "Cliente: 'Tengo la cuenta Nu pero cuando intento solicitar la tarjeta de cr√©dito no me aparece la opci√≥n. ¬øPor qu√© ser√°?'",
                    options: [
                        "acquisition.cross-sell",
                        "others.app-issues",
                        "acquisition.soft-decline",
                        "acquisition.first-time-application"
                    ],
                    correct: 0,
                    explanation: "Cliente existente preguntando por producto adicional es 'acquisition.cross-sell'."
                },
                {
                    case: "Prospecto: 'Me ofrecieron la tarjeta NuControl con cuota de manejo mensual. ¬øQu√© beneficios tiene que la justifiquen?'",
                    options: [
                        "acquisition_fee_card_general_doubts",
                        "acquisition.first-time-application",
                        "acquisition.unwanted-product-offer",
                        "acquisition.soft-decline"
                    ],
                    correct: 0,
                    explanation: "Dudas espec√≠ficas sobre la tarjeta NuControl son 'acquisition_fee_card_general_doubts'."
                },
                {
                    case: "Cliente: 'Las misiones que me aparecen en la app para activar mi producto no funcionan. No puedo completar ninguna.'",
                    options: [
                        "acquisition.offer-product.basic.onboarding",
                        "others.app-issues",
                        "acquisition.cross-sell",
                        "notification.unsubscribe"
                    ],
                    correct: 0,
                    explanation: "Problemas con las misiones de activaci√≥n son 'acquisition.offer-product.basic.onboarding'."
                },
                {
                    case: "Prospecto: 'Quiero invertir en un CDT con Nu pero no s√© qu√© documentos necesito ni c√≥mo es el proceso.'",
                    options: [
                        "acquisition.cdts_doubts",
                        "acquisition.first-time-application",
                        "acquisition.cross-sell",
                        "acquisition.new-products-request"
                    ],
                    correct: 0,
                    explanation: "Consultas sobre CDTs de prospectos son 'acquisition.cdts_doubts'."
                },
                {
                    case: "Cliente: 'Cancel√© mi tarjeta de cr√©dito Nu el a√±o pasado pero ahora la necesito de nuevo. ¬øPuedo reactivarla?'",
                    options: [
                        "other.reactivate-request",
                        "acquisition.first-time-application",
                        "acquisition.cross-sell",
                        "acquisition.opt-out"
                    ],
                    correct: 0,
                    explanation: "Excliente que quiere reactivar tarjeta de cr√©dito es 'other.reactivate-request'."
                },
                {
                    case: "Cliente molesto: 'Mi tarjeta fue declinada en el supermercado frente a todos. Es muy vergonzoso. ¬øPor qu√© pasa esto?'",
                    options: [
                        "acquisition.soft-decline",
                        "others.app-issues",
                        "acquisition.cross-sell",
                        "notification.unsubscribe"
                    ],
                    correct: 1,
                    explanation: "Problemas con el funcionamiento de la tarjeta se clasifican como 'others.app-issues'."
                }
            ]
        };
    }

    // Activity: Clasifica el Caso
    loadRandomCase() {
        const data = this.getAcademyData();
        const cases = data.clasifica;
        this.currentCase = cases[Math.floor(Math.random() * cases.length)];
        
        document.getElementById('case-text').textContent = this.currentCase.case;
        
        const optionsContainer = document.getElementById('classification-options');
        optionsContainer.innerHTML = '';
        
        this.currentCase.options.forEach((option, index) => {
            const optionDiv = document.createElement('div');
            optionDiv.className = 'classification-option';
            optionDiv.textContent = option;
            optionDiv.onclick = () => this.selectCaseOption(index);
            optionsContainer.appendChild(optionDiv);
        });
        
        // Hide feedback and button
        document.getElementById('case-feedback').style.display = 'none';
        document.getElementById('next-case-btn').style.display = 'none';
    }

    selectCaseOption(selectedIndex) {
        const options = document.querySelectorAll('.classification-option');
        const isCorrect = selectedIndex === this.currentCase.correct;
        
        options.forEach((option, index) => {
            option.style.pointerEvents = 'none';
            if (index === this.currentCase.correct) {
                option.classList.add('correct');
            } else if (index === selectedIndex && !isCorrect) {
                option.classList.add('incorrect');
            }
        });
        
        document.getElementById('case-explanation').textContent = this.currentCase.explanation;
        document.getElementById('case-feedback').style.display = 'block';
        document.getElementById('next-case-btn').style.display = 'block';
    }

    // Activity: Humaniza la Macro
    loadRandomHumanizeCase() {
        const data = this.getAcademyData();
        const cases = data.humaniza;
        this.currentHumanizeCase = cases[Math.floor(Math.random() * cases.length)];
        
        document.getElementById('client-query').textContent = this.currentHumanizeCase.query;
        document.getElementById('robotic-macro').textContent = this.currentHumanizeCase.macro;
        document.getElementById('user-humanized').value = '';
        document.getElementById('comparison-result').style.display = 'none';
    }

    showHumanizedComparison() {
        document.getElementById('ideal-response').textContent = this.currentHumanizeCase.ideal;
        document.getElementById('comparison-result').style.display = 'block';
    }

    // Activity: Aventura de Soporte
    showAdventureMenu() {
        console.log('showAdventureMenu called');
        
        // Hide all adventure sections
        const adventureMenu = document.getElementById('adventure-menu');
        const adventureProgress = document.getElementById('adventure-progress');
        const storyContainer = document.getElementById('story-container');
        const adventureResult = document.getElementById('adventure-result');
        
        console.log('Adventure elements:', {
            adventureMenu,
            adventureProgress,
            storyContainer,
            adventureResult
        });
        
        if (adventureMenu) adventureMenu.style.display = 'block';
        if (adventureProgress) adventureProgress.style.display = 'none';
        if (storyContainer) storyContainer.style.display = 'none';
        if (adventureResult) adventureResult.style.display = 'none';
    }

    selectAdventureScenario(scenarioId) {
        console.log('selectAdventureScenario called with:', scenarioId);
        this.currentScenarioId = scenarioId;
        this.startAdventureScenario();
    }

    selectRandomAdventure() {
        const data = this.getAcademyData();
        const scenarios = data.aventura.scenarios;
        const randomScenario = scenarios[Math.floor(Math.random() * scenarios.length)];
        this.currentScenarioId = randomScenario.id;
        this.startAdventureScenario();
    }

    startAdventureScenario() {
        const data = this.getAcademyData();
        const scenarios = data.aventura.scenarios;
        this.currentAdventure = scenarios.find(s => s.id === this.currentScenarioId);
        
        if (!this.currentAdventure) {
            console.error('Scenario not found:', this.currentScenarioId);
            return;
        }

        this.adventureStep = 'start';
        this.adventureStepCount = 1;
        this.clientMood = 'neutral';
        
        this.showAdventureProgress();
        this.showAdventureStep();
    }

    showAdventureProgress() {
        document.getElementById('adventure-menu').style.display = 'none';
        document.getElementById('adventure-progress').style.display = 'block';
        
        // Update progress info
        const scenarioTitles = {
            'frustrated_client': 'Cliente Frustrado - Mar√≠a',
            'confused_prospect': 'Prospecto Confundido - Carlos',
            'payment_issue': 'Problema de Pago - Ana',
            'cross_sell_opportunity': 'Oportunidad de Venta - Luis'
        };
        
        document.getElementById('adventure-scenario-title').textContent = scenarioTitles[this.currentScenarioId] || 'Escenario en Progreso';
        document.getElementById('step-indicator').textContent = `Paso ${this.adventureStepCount}`;
        
        // Update client mood
        const moodEmojis = {
            'happy': 'üòä Contento',
            'neutral': 'üòê Neutral',
            'frustrated': 'üò§ Frustrado',
            'confused': 'ü§î Confundido',
            'satisfied': 'üòå Satisfecho'
        };
        
        document.getElementById('client-mood').textContent = moodEmojis[this.clientMood] || 'üòê Neutral';
    }

    showAdventureStep() {
        const step = this.currentAdventure[this.adventureStep];
        
        if (!step) {
            console.error('Step not found:', this.adventureStep);
            return;
        }
        
        document.getElementById('story-container').style.display = 'block';
        
        // Update client avatar based on scenario
        const avatars = {
            'frustrated_client': 'üë©‚Äçüíº',
            'confused_prospect': 'üë®‚Äçüíª',
            'payment_issue': 'üë©‚Äçü¶±',
            'cross_sell_opportunity': 'üë®‚Äçüîß'
        };
        
        document.getElementById('client-avatar').textContent = avatars[this.currentScenarioId] || 'üë§';
        document.getElementById('adventure-title').textContent = step.title;
        document.getElementById('adventure-text').textContent = step.text;
        
        // Update client mood based on step
        if (step.title.includes('Frustrado') || step.title.includes('molesta')) {
            this.clientMood = 'frustrated';
        } else if (step.title.includes('Confundido')) {
            this.clientMood = 'confused';
        } else if (step.title.includes('Excelente') || step.title.includes('√âxito')) {
            this.clientMood = 'happy';
        } else if (step.title.includes('satisfecho') || step.title.includes('Satisfecho')) {
            this.clientMood = 'satisfied';
        }
        
        this.showAdventureProgress(); // Update mood display
        
        const choicesContainer = document.getElementById('adventure-choices');
        choicesContainer.innerHTML = '';
        
        if (step.choices) {
            step.choices.forEach((choice, index) => {
                const choiceDiv = document.createElement('div');
                choiceDiv.className = 'adventure-choice';
                
                // Add choice quality indicator
                const qualityClass = this.getChoiceQuality(choice.text);
                choiceDiv.classList.add(qualityClass);
                
                choiceDiv.innerHTML = `
                    <div class="choice-text">${choice.text}</div>
                    <div class="choice-indicator">${this.getChoiceIcon(qualityClass)}</div>
                `;
                
                choiceDiv.onclick = () => this.makeAdventureChoice(choice.next);
                choicesContainer.appendChild(choiceDiv);
            });
        } else if (step.result) {
            // Final result
            this.showAdventureResult(step);
        }
    }

    getChoiceQuality(choiceText) {
        // Analyze choice text to determine quality
        const empathetic = ['entiendo', 'comprendo', 'lamento', 'siento', 'ayudarte', 'juntos', 'contarme'];
        const neutral = ['revisar', 'verificar', 'informaci√≥n', 'proceso'];
        const poor = ['normal', 'siempre', 'debe', 'sigui√≥', 'instrucciones'];
        
        const lowerText = choiceText.toLowerCase();
        
        if (empathetic.some(word => lowerText.includes(word))) {
            return 'choice-empathetic';
        } else if (poor.some(word => lowerText.includes(word))) {
            return 'choice-poor';
        } else {
            return 'choice-neutral';
        }
    }

    getChoiceIcon(qualityClass) {
        switch (qualityClass) {
            case 'choice-empathetic': return 'üíú';
            case 'choice-neutral': return 'üí¨';
            case 'choice-poor': return '‚ö†Ô∏è';
            default: return 'üí¨';
        }
    }

    makeAdventureChoice(nextStep) {
        this.adventureStep = nextStep;
        this.adventureStepCount++;
        
        const step = this.currentAdventure[nextStep];
        
        if (step && step.result) {
            this.showAdventureResult(step);
        } else {
            this.showAdventureStep();
        }
    }

    showAdventureResult(step) {
        document.getElementById('story-container').style.display = 'none';
        document.getElementById('adventure-result').style.display = 'block';
        
        // Update result based on outcome
        const resultIcons = {
            'success': 'üéâ',
            'partial': 'üëç',
            'neutral': 'üòê',
            'failure': 'üòû'
        };
        
        document.getElementById('result-icon').textContent = resultIcons[step.result] || 'üéâ';
        document.getElementById('result-title').textContent = step.title;
        document.getElementById('result-text').textContent = step.text;
        document.getElementById('result-lesson').textContent = step.lesson || step.message;
    }

    startAdventure() {
        // Legacy method - redirect to new menu system
        this.showAdventureMenu();
    }

    startNewAdventure() {
        this.selectRandomAdventure();
    }

    // Activity: Ronda de Conocimiento
    startQuiz() {
        const data = this.getAcademyData();
        this.quizQuestions = [...data.conocimiento].sort(() => 0.5 - Math.random());
        this.currentQuizIndex = 0;
        this.quizScore = 0;
        
        document.getElementById('quiz-feedback').style.display = 'none';
        document.getElementById('quiz-results').style.display = 'none';
        
        this.showQuizQuestion();
    }

    showQuizQuestion() {
        console.log('showQuizQuestion called');
        const question = this.quizQuestions[this.currentQuizIndex];
        console.log('Current question:', question);
        
        if (!question) {
            console.error('No question found at index:', this.currentQuizIndex);
            return;
        }
        
        // Reset selected answers for multiple choice
        this.selectedAnswers = [];
        
        // Update progress
        const progress = ((this.currentQuizIndex + 1) / this.quizQuestions.length) * 100;
        const progressFill = document.getElementById('quiz-progress-fill');
        const progressText = document.getElementById('quiz-progress-text');
        
        if (progressFill) {
            progressFill.style.width = `${progress}%`;
        }
        if (progressText) {
            progressText.textContent = `Pregunta ${this.currentQuizIndex + 1} de ${this.quizQuestions.length}`;
        }
        
        const questionElement = document.getElementById('quiz-question');
        if (questionElement) {
            // Add instruction for multiple choice questions
            let questionText = question.question;
            if (question.type === 'multiple') {
                questionText += ' (Puedes seleccionar m√∫ltiples opciones)';
            }
            questionElement.textContent = questionText;
        } else {
            console.error('quiz-question element not found');
        }
        
        const optionsContainer = document.getElementById('academy-quiz-options');
        console.log('Options container:', optionsContainer);
        
        if (optionsContainer) {
            optionsContainer.innerHTML = '';
            
            if (!question.options || !Array.isArray(question.options)) {
                console.error('Question options not found or not an array:', question.options);
                return;
            }
            
            question.options.forEach((option, index) => {
                const optionDiv = document.createElement('div');
                optionDiv.className = 'quiz-option';
                optionDiv.textContent = option;
                
                if (question.type === 'multiple') {
                    optionDiv.onclick = () => this.selectMultipleQuizOption(index);
                } else {
                    optionDiv.onclick = () => this.selectSingleQuizOption(index);
                }
                
                optionsContainer.appendChild(optionDiv);
                console.log('Added option:', option);
            });
            
            // Add submit button for multiple choice
            if (question.type === 'multiple') {
                const submitBtn = document.createElement('button');
                submitBtn.className = 'academy-btn primary';
                submitBtn.textContent = 'Confirmar Respuestas';
                submitBtn.id = 'quiz-submit-btn';
                submitBtn.disabled = true;
                submitBtn.onclick = () => this.submitQuizAnswer();
                optionsContainer.appendChild(submitBtn);
            }
            
            // Make sure the quiz container is visible
            const quizContainer = document.querySelector('.quiz-container');
            if (quizContainer) {
                quizContainer.style.display = 'block';
            }
            
        } else {
            console.error('academy-quiz-options container not found');
        }
    }

    selectSingleQuizOption(selectedIndex) {
        // Remove previous selections
        document.querySelectorAll('#academy-quiz-options .quiz-option').forEach(option => {
            option.classList.remove('selected');
        });
        
        // Select current option
        document.querySelectorAll('#academy-quiz-options .quiz-option')[selectedIndex].classList.add('selected');
        this.selectedAnswers = [selectedIndex];
        
        // Auto-submit for single choice
        setTimeout(() => this.submitQuizAnswer(), 500);
    }

    selectMultipleQuizOption(selectedIndex) {
        const optionElement = document.querySelectorAll('#academy-quiz-options .quiz-option')[selectedIndex];
        
        if (this.selectedAnswers.includes(selectedIndex)) {
            // Deselect
            this.selectedAnswers = this.selectedAnswers.filter(i => i !== selectedIndex);
            optionElement.classList.remove('selected');
        } else {
            // Select
            this.selectedAnswers.push(selectedIndex);
            optionElement.classList.add('selected');
        }
        
        // Enable/disable submit button
        const submitBtn = document.getElementById('quiz-submit-btn');
        if (submitBtn) {
            submitBtn.disabled = this.selectedAnswers.length === 0;
        }
    }

    submitQuizAnswer() {
        const question = this.quizQuestions[this.currentQuizIndex];
        let isCorrect = false;
        
        if (question.type === 'multiple') {
            // Check if arrays are equal (same elements, same length)
            const correctAnswers = question.correct.sort();
            const selectedAnswers = this.selectedAnswers.sort();
            isCorrect = correctAnswers.length === selectedAnswers.length && 
                       correctAnswers.every((val, index) => val === selectedAnswers[index]);
        } else {
            // Single choice
            isCorrect = this.selectedAnswers.length === 1 && this.selectedAnswers[0] === question.correct;
        }
        
        if (isCorrect) {
            this.quizScore++;
        }
        
        // Show feedback
        this.showQuizFeedback(isCorrect, question);
    }

    showQuizFeedback(isCorrect, question) {
        const options = document.querySelectorAll('#academy-quiz-options .quiz-option');
        
        // Disable all options
        options.forEach(option => {
            option.style.pointerEvents = 'none';
        });
        
        // Highlight correct answers
        if (question.type === 'multiple') {
            question.correct.forEach(correctIndex => {
                options[correctIndex].classList.add('correct');
            });
            
            // Highlight incorrect selections
            this.selectedAnswers.forEach(selectedIndex => {
                if (!question.correct.includes(selectedIndex)) {
                    options[selectedIndex].classList.add('incorrect');
                }
            });
        } else {
            options[question.correct].classList.add('correct');
            
            // Highlight incorrect selection if any
            this.selectedAnswers.forEach(selectedIndex => {
                if (selectedIndex !== question.correct) {
                    options[selectedIndex].classList.add('incorrect');
                }
            });
        }
        
        // Show explanation
        document.getElementById('quiz-explanation').textContent = question.explanation;
        document.getElementById('quiz-feedback').style.display = 'block';
        
        // Update next button text
        const nextBtn = document.getElementById('next-question-btn');
        if (this.currentQuizIndex === this.quizQuestions.length - 1) {
            nextBtn.textContent = 'Ver Resultados';
        } else {
            nextBtn.textContent = 'Siguiente Pregunta';
        }
        
        // Hide submit button for multiple choice
        const submitBtn = document.getElementById('quiz-submit-btn');
        if (submitBtn) {
            submitBtn.style.display = 'none';
        }
    }

    nextQuizQuestion() {
        if (this.currentQuizIndex < this.quizQuestions.length - 1) {
            this.currentQuizIndex++;
            document.getElementById('quiz-feedback').style.display = 'none';
            
            // Reset options
            document.querySelectorAll('#academy-quiz-options .quiz-option').forEach(option => {
                option.classList.remove('correct', 'incorrect', 'selected');
                option.style.pointerEvents = 'auto';
            });
            
            this.showQuizQuestion();
        } else {
            this.showQuizResults();
        }
    }

    showQuizResults() {
        document.getElementById('quiz-feedback').style.display = 'none';
        document.getElementById('final-quiz-score').textContent = this.quizScore;
        document.getElementById('total-questions').textContent = this.quizQuestions.length;
        
        const percentage = (this.quizScore / this.quizQuestions.length) * 100;
        let message = '';
        
        if (percentage === 100) {
            message = '¬°Perfecto! Tienes un dominio excelente del conocimiento.';
        } else if (percentage >= 80) {
            message = '¬°Muy bien! Tienes un buen nivel de conocimiento.';
        } else if (percentage >= 60) {
            message = 'Buen trabajo, pero hay espacio para mejorar.';
        } else {
            message = 'Sigue estudiando. La pr√°ctica hace al maestro.';
        }
        
        document.getElementById('quiz-message').textContent = message;
        document.getElementById('quiz-results').style.display = 'block';
    }

    // Activity: Retos de Memoria
    showMemoryMenu() {
        // Hide all memory sections
        document.getElementById('memory-menu').style.display = 'block';
        document.getElementById('memory-progress').style.display = 'none';
        document.getElementById('memory-reading').style.display = 'none';
        document.getElementById('memory-question').style.display = 'none';
        document.getElementById('memory-result').style.display = 'none';
        document.getElementById('memory-final-results').style.display = 'none';
    }

    startMemoryChallenge(challengeType) {
        this.memoryChallengeType = challengeType;
        this.currentMemoryIndex = 0;
        this.memoryScore = 0;
        this.memoryTimes = [];
        
        // Configure challenge based on type
        const challenges = this.getMemoryChallengeConfig();
        this.currentMemoryChallenge = challenges[challengeType];
        
        // Get random cases for this challenge
        const data = this.getAcademyData();
        const allCases = data.memoria;
        this.memoryCases = [...allCases]
            .sort(() => 0.5 - Math.random())
            .slice(0, this.currentMemoryChallenge.totalCases);
        
        // Show progress and start first case
        this.showMemoryProgress();
        this.startMemoryCase();
    }

    getMemoryChallengeConfig() {
        return {
            speed: {
                name: 'Reto de Velocidad',
                totalCases: 5,
                timePerCase: 5,
                description: '5 casos en 5 segundos cada uno'
            },
            precision: {
                name: 'Reto de Precisi√≥n',
                totalCases: 3,
                timePerCase: 7,
                description: '3 casos complejos en 7 segundos'
            },
            extreme: {
                name: 'Reto Extremo',
                totalCases: 10,
                timePerCase: 3,
                description: '10 casos en 3 segundos cada uno'
            },
            marathon: {
                name: 'Marat√≥n Mental',
                totalCases: 15,
                timePerCase: null, // Variable time
                description: '15 casos aleatorios variando tiempo'
            }
        };
    }

    showMemoryProgress() {
        document.getElementById('memory-menu').style.display = 'none';
        document.getElementById('memory-progress').style.display = 'block';
        
        document.getElementById('challenge-title').textContent = this.currentMemoryChallenge.name;
        document.getElementById('current-challenge').textContent = `Caso ${this.currentMemoryIndex + 1}`;
        document.getElementById('total-challenges').textContent = this.currentMemoryChallenge.totalCases;
        document.getElementById('memory-score').textContent = this.memoryScore;
        
        const progress = ((this.currentMemoryIndex) / this.currentMemoryChallenge.totalCases) * 100;
        document.getElementById('memory-progress-fill').style.width = `${progress}%`;
    }

    startMemoryCase() {
        if (this.currentMemoryIndex >= this.currentMemoryChallenge.totalCases) {
            this.showMemoryFinalResults();
            return;
        }

        const currentCase = this.memoryCases[this.currentMemoryIndex];
        
        // Hide other sections
        document.getElementById('memory-question').style.display = 'none';
        document.getElementById('memory-result').style.display = 'none';
        
        // Show reading section
        document.getElementById('memory-reading').style.display = 'block';
        document.getElementById('memory-case-text').textContent = currentCase.case;
        
        // Determine time for this case
        let timeForCase = this.currentMemoryChallenge.timePerCase;
        if (this.memoryChallengeType === 'marathon') {
            // Variable time for marathon: 3, 5, or 7 seconds randomly
            timeForCase = [3, 5, 7][Math.floor(Math.random() * 3)];
        }
        
        // Start timer
        this.memoryStartTime = Date.now();
        this.startMemoryTimer(timeForCase);
    }

    startMemoryTimer(seconds) {
        let timeLeft = seconds;
        document.getElementById('timer-text').textContent = `${timeLeft}s`;
        document.getElementById('timer-fill').style.width = '100%';
        
        this.memoryTimer = setInterval(() => {
            timeLeft--;
            document.getElementById('timer-text').textContent = `${timeLeft}s`;
            document.getElementById('timer-fill').style.width = `${(timeLeft / seconds) * 100}%`;
            
            if (timeLeft <= 0) {
                clearInterval(this.memoryTimer);
                this.showMemoryQuestion();
            }
        }, 1000);
    }

    // Stub methods to prevent errors
    initializeLiteLLM() {
        console.log("ü§ñ LiteLLM initialized");
    }
    
    initializeAcademy() {
        console.log("üéì Academy initialized");
    }
    
    closeModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.style.display = 'none';
        }
    }
    
    initializeTrainingSimulation() {
        console.log("üìö Training simulation initialized");
    }
    
    startTrainingQuiz() {
        console.log("üéØ Training quiz started");
    }

    // IA Integration - Local AI
    async initializeAI() {
        console.log('ü§ñ Inicializando IA Local...');
        
        const aiGenerateBtn = document.getElementById('aiGenerateBtn');
        const improveBtn = document.getElementById('improveResponseBtn');
        
        if (aiGenerateBtn) {
            aiGenerateBtn.addEventListener('click', () => this.generateAIResponse());
        }
        
        if (improveBtn) {
            improveBtn.addEventListener('click', () => this.improveResponse());
        }
    }

    async generateAIResponse() {
        const contextInput = document.getElementById('contextInput');
        const responseOutput = document.getElementById('responseOutput');
        const aiBtn = document.getElementById('aiGenerateBtn');
        const loader = aiBtn.querySelector('.ai-loader');
        
        if (!contextInput.value.trim()) {
            alert('Por favor, ingresa el contexto del cliente primero');
            return;
        }
        
        // Mostrar loading
        aiBtn.disabled = true;
        loader.classList.remove('hidden');
        
        // Simular procesamiento IA
        await new Promise(resolve => setTimeout(resolve, 1500));
        
        try {
            const selectedEmotion = document.querySelector('.emotion-btn.active');
            const emotion = selectedEmotion ? selectedEmotion.dataset.emotion : 'neutro';
            
            const aiResponse = this.generateLocalAIResponse(contextInput.value, emotion);
            
            // Efecto de escritura
            responseOutput.value = '';
            await this.typeWriter(responseOutput, aiResponse, 30);
            
        } catch (error) {
            console.error('Error IA:', error);
            responseOutput.value = 'Error generando respuesta. Int√©ntalo de nuevo.';
        } finally {
            aiBtn.disabled = false;
            loader.classList.add('hidden');
        }
    }

    generateLocalAIResponse(query, emotion = 'neutro') {
        const keywords = {
            tarjeta: {
                neutro: "Entiendo tu consulta sobre la tarjeta Nu. Para ayudarte mejor, verifica que est√© activada y que tengas saldo disponible. Si persiste el problema, puedo guiarte paso a paso para solucionarlo.",
                molesto: "Lamento mucho la inconveniencia con tu tarjeta Nu. Comprendo tu frustraci√≥n y te ayudo inmediatamente. Primero, revisemos juntos el estado de tu tarjeta para resolver esto r√°pidamente.",
                confundido: "Te ayudo a entender c√≥mo funciona tu tarjeta Nu. Es muy sencillo: primero verifica que est√© activada en la app, luego confirma que tengas saldo. ¬øTe gu√≠o paso a paso?",
                satisfecho: "¬°Excelente que uses tu tarjeta Nu! Me da gusto ayudarte. Para cualquier consulta sobre tu tarjeta, estoy aqu√≠ para apoyarte y hacer tu experiencia a√∫n mejor.",
                preocupado: "Comprendo tu preocupaci√≥n sobre tu tarjeta Nu. Tranquilo, vamos a revisar todo juntos para asegurarnos de que funcione perfectamente. Te gu√≠o paso a paso."
            },
            transferencia: {
                neutro: "Para realizar transferencias con Nu, puedes usar la app o la web. Necesitas los datos del destinatario y confirmar con tu clave. ¬øEn qu√© paso espec√≠fico necesitas ayuda?",
                molesto: "Entiendo tu frustraci√≥n con las transferencias. Te ayudo inmediatamente a resolver esto. Las transferencias con Nu son seguras y r√°pidas, d√©jame guiarte para completarla sin problemas.",
                confundido: "Las transferencias son muy f√°ciles con Nu. Te explico paso a paso: 1) Abre la app, 2) Selecciona 'Transferir', 3) Ingresa los datos, 4) Confirma. ¬øComenzamos?",
                satisfecho: "¬°Genial que uses las transferencias de Nu! Son s√∫per r√°pidas y seguras. Te ayudo con cualquier duda para que tengas la mejor experiencia posible.",
                preocupado: "Entiendo tu preocupaci√≥n sobre las transferencias. Te aseguro que son muy seguras con Nu. Te explico todo el proceso para que te sientas completamente tranquilo."
            },
            saldo: {
                neutro: "Para consultar tu saldo en Nu, puedes usar la app, web o cajeros. Tu saldo se actualiza en tiempo real. ¬øNecesitas ayuda para acceder a alguna de estas opciones?",
                molesto: "Comprendo tu preocupaci√≥n por el saldo. Te ayudo inmediatamente a verificarlo. Con Nu puedes consultar tu saldo 24/7 sin costo. D√©jame guiarte para que lo veas ahora mismo.",
                confundido: "Ver tu saldo es s√∫per f√°cil. Te muestro las opciones: 1) App Nu (m√°s r√°pido), 2) Web nu.com.mx, 3) Cualquier cajero. ¬øCu√°l prefieres que te explique?",
                satisfecho: "¬°Excelente que monitorees tu saldo! Es una gran pr√°ctica financiera. Con Nu tienes m√∫ltiples formas de consultarlo. ¬øTe muestro cu√°l es la m√°s conveniente para ti?",
                preocupado: "Comprendo tu preocupaci√≥n por verificar tu saldo. Con Nu puedes consultarlo de forma segura las 24 horas. Te muestro las opciones m√°s confiables."
            },
            bloqueo: {
                neutro: "Si necesitas bloquear tu tarjeta Nu, puedes hacerlo inmediatamente desde la app o llamando a soporte. Es un proceso seguro y reversible. ¬øQu√© tipo de bloqueo necesitas?",
                molesto: "Entiendo la urgencia de bloquear tu tarjeta. Tranquilo, podemos hacerlo inmediatamente. Nu protege tu dinero 24/7. Te gu√≠o para bloquearlo ahora mismo y resolver tu situaci√≥n.",
                confundido: "Bloquear tu tarjeta es un proceso de seguridad muy importante. Te explico las opciones: 1) Bloqueo temporal (puedes reactivar), 2) Bloqueo definitivo. ¬øCu√°l necesitas?",
                satisfecho: "¬°Qu√© bueno que seas proactivo con la seguridad! Bloquear preventivamente es muy inteligente. Te muestro c√≥mo hacerlo r√°pido y f√°cil con Nu.",
                preocupado: "Comprendo tu preocupaci√≥n por la seguridad. Bloquear tu tarjeta es la decisi√≥n correcta. Te ayudo inmediatamente para que te sientas tranquilo."
            }
        };
        
        // Detectar palabra clave
        const queryLower = query.toLowerCase();
        let category = 'general';
        
        if (queryLower.includes('tarjeta') || queryLower.includes('card')) category = 'tarjeta';
        else if (queryLower.includes('transferir') || queryLower.includes('enviar') || queryLower.includes('transfer')) category = 'transferencia';
        else if (queryLower.includes('saldo') || queryLower.includes('dinero') || queryLower.includes('balance')) category = 'saldo';
        else if (queryLower.includes('bloquear') || queryLower.includes('block') || queryLower.includes('cancelar')) category = 'bloqueo';
        
        if (keywords[category] && keywords[category][emotion]) {
            return keywords[category][emotion];
        }
        
        // Respuesta general
        const generalResponses = {
            neutro: "Gracias por contactar a Nu. He revisado tu consulta y te proporciono la informaci√≥n correspondiente. ¬øHay algo espec√≠fico en lo que pueda ayudarte adicional?",
            molesto: "Lamento mucho cualquier inconveniente que hayas experimentado. En Nu valoramos mucho tu confianza y queremos resolver tu situaci√≥n inmediatamente. ¬øC√≥mo puedo ayudarte mejor?",
            confundido: "Te ayudo a aclarar tu duda paso a paso. En Nu queremos que tengas la mejor experiencia, as√≠ que te explico todo de manera sencilla. ¬øPor d√≥nde empezamos?",
            satisfecho: "¬°Me da mucho gusto poder ayudarte! En Nu estamos comprometidos con brindarte el mejor servicio. ¬øEn qu√© m√°s puedo apoyarte para mejorar tu experiencia?",
            preocupado: "Comprendo tu preocupaci√≥n y quiero ayudarte a resolverla. En Nu estamos aqu√≠ para apoyarte en todo momento. Te explico todo lo que necesitas saber."
        };
        
        return generalResponses[emotion] || generalResponses['neutro'];
    }

    async improveResponse() {
        const responseOutput = document.getElementById('responseOutput');
        
        if (!responseOutput.value.trim()) {
            alert('Primero genera o escribe una respuesta');
            return;
        }
        
        // Mejorar respuesta localmente
        const improved = this.improveLocalResponse(responseOutput.value);
        await this.typeWriter(responseOutput, improved, 30);
    }

    improveLocalResponse(originalResponse) {
        // Mejoras autom√°ticas
        let improved = originalResponse;
        
        // Agregar empat√≠a si no la tiene
        if (!improved.includes('entiendo') && !improved.includes('comprendo') && !improved.includes('lamento')) {
            improved = 'Entiendo tu situaci√≥n. ' + improved;
        }
        
        // Agregar siguiente paso si no lo tiene
        if (!improved.includes('?') && !improved.includes('siguiente') && !improved.includes('ayudar')) {
            improved += ' ¬øTe gustar√≠a que te ayude con algo m√°s espec√≠fico?';
        }
        
        // Hacer m√°s profesional
        improved = improved.replace(/ok/gi, 'perfecto');
        improved = improved.replace(/bye/gi, 'que tengas un excelente d√≠a');
        improved = improved.replace(/hola/gi, 'Hola, es un gusto atenderte');
        
        return improved;
    }

    async typeWriter(element, text, speed = 30) {
        element.value = '';
        for (let i = 0; i < text.length; i++) {
            element.value += text.charAt(i);
            await new Promise(resolve => setTimeout(resolve, speed));
        }
    }
}

// Initialize app when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    window.app = new NuSenseApp();
});

// Global functions for HTML onclick attributes
function closeModal(modalId) {
    if (window.app && window.app.closeModal) {
    window.app.closeModal(modalId);
    }
}

function initializeSimulation() {
    if (window.app && window.app.initializeTrainingSimulation) {
    window.app.initializeTrainingSimulation();
    }
}

function startTrainingQuiz() {
    if (window.app && window.app.startTrainingQuiz) {
        window.app.startTrainingQuiz();
    }
}
